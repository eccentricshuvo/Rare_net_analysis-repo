//
//   (C) Copyright International Business Machines
//
//   Generated by 'gen_verilog' version 9/15/03 on Tue Oct 14 20:58:58 2003
//
//   IDM Proto Box : DLX_TOP/TECH
//

module DLX_TOP(DLX_CHIPTOP_A, DLX_CHIPTOP_DATA, DLX_CHIPTOP_SRAM_ADDR, DLX_CHIPTOP_WIDTH, 
               DLX_CHIPTOP_TEST_ENABLE, DLX_CHIPTOP_TEST_CLOCK, DLX_CHIPTOP_TDI, 
               DLX_CHIPTOP_TCK, DLX_CHIPTOP_TMS, DLX_CHIPTOP_TRST, DLX_CHIPTOP_SE, 
               DLX_CHIPTOP_RESET, DLX_CHIPTOP_RESET2, DLX_CHIPTOP_READY, DLX_CHIPTOP_SYS_CLK, 
               DLX_CHIPTOP_HALT, DLX_CHIPTOP_SRAM_RDWT, DLX_CHIPTOP_WRITE_ENABLE, 
               DLX_CHIPTOP_IFETCH, DLX_CHIPTOP_MEM_ENABLE, DLX_CHIPTOP_TDO);

// Port declarations
   output [31:0] DLX_CHIPTOP_A;
   inout  [31:0] DLX_CHIPTOP_DATA;
   output [5:0] DLX_CHIPTOP_SRAM_ADDR;
   output [1:0] DLX_CHIPTOP_WIDTH;
   input  DLX_CHIPTOP_TEST_ENABLE;
   input  DLX_CHIPTOP_TEST_CLOCK;
   input  DLX_CHIPTOP_TDI;
   input  DLX_CHIPTOP_TCK;
   input  DLX_CHIPTOP_TMS;
   input  DLX_CHIPTOP_TRST;
   input  DLX_CHIPTOP_SE;
   input  DLX_CHIPTOP_RESET;
   input  DLX_CHIPTOP_RESET2;
   input  DLX_CHIPTOP_READY;
   input  DLX_CHIPTOP_SYS_CLK;
   output DLX_CHIPTOP_HALT;
   output DLX_CHIPTOP_SRAM_RDWT;
   output DLX_CHIPTOP_WRITE_ENABLE;
   output DLX_CHIPTOP_IFETCH;
   output DLX_CHIPTOP_MEM_ENABLE;
   inout  DLX_CHIPTOP_TDO;

// Internal net declarations
   wire [15:0] DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA;
   wire [31:16] DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA;
   wire [31:0] DRV_DLX_CHIPTOP_A;
   wire [5:0] DRV_DLX_CHIPTOP_SRAM_ADDR;
   wire [1:0] DRV_DLX_CHIPTOP_WIDTH;
   wire [15:0] EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA;
   wire [31:16] EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA;
   wire [31:0] I_CORE_DATA;
   wire [31:0] O_CORE_DATA;
   wire [15:0] RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA;
   wire [31:16] RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA;
   wire [15:0] SCAN_IN;
   wire [15:0] SCAN_OUT;
   wire DRV_DLX_CHIPTOP_HALT;
   wire DRV_DLX_CHIPTOP_SRAM_RDWT;
   wire DRV_DLX_CHIPTOP_WRITE_ENABLE;
   wire DRV_DLX_CHIPTOP_IFETCH;
   wire DRV_DLX_CHIPTOP_MEM_ENABLE;
   wire VDD;
   wire O_CORE_BIDIR_ENABLE;
   wire I_CORE_RESET2;
   wire TEST_ENABLE;
   wire TEST_CLOCK;
   wire PAD_DATA_DLX_CHIPTOP_TDI;
   wire PAD_DATA_DLX_CHIPTOP_TCK;
   wire PAD_DATA_DLX_CHIPTOP_TMS;
   wire PAD_DATA_DLX_CHIPTOP_TRST;
   wire SCAN_ENABLE;
   wire I_CORE_RESET1;
   wire PAD_DATA_DLX_CHIPTOP_RESET2;
   wire I_CORE_READY;
   wire I_CORE_SYS_CLK;
   wire JTAG_TRST;
   wire JTAG_TMS;
   wire JTAG_TCK;
   wire JTAG_TDI;
   wire TEST_CLOCK_N1;
   wire ENABLE;
   wire \O_CORE_DATA[0]_N2 ;
   wire \I_CORE_DATA[0]_N3 ;
   wire TBB_BSC_MERGED_82_IOEN;
   wire \O_CORE_DATA[1]_N4 ;
   wire \I_CORE_DATA[1]_N5 ;
   wire \O_CORE_DATA[2]_N6 ;
   wire \I_CORE_DATA[2]_N7 ;
   wire \O_CORE_DATA[3]_N8 ;
   wire \I_CORE_DATA[3]_N9 ;
   wire \O_CORE_DATA[4]_N10 ;
   wire \I_CORE_DATA[4]_N11 ;
   wire \O_CORE_DATA[5]_N12 ;
   wire \I_CORE_DATA[5]_N13 ;
   wire \O_CORE_DATA[6]_N14 ;
   wire \I_CORE_DATA[6]_N15 ;
   wire \O_CORE_DATA[7]_N16 ;
   wire \I_CORE_DATA[7]_N17 ;
   wire \O_CORE_DATA[8]_N18 ;
   wire \I_CORE_DATA[8]_N19 ;
   wire \O_CORE_DATA[9]_N20 ;
   wire \I_CORE_DATA[9]_N21 ;
   wire \O_CORE_DATA[10]_N22 ;
   wire \I_CORE_DATA[10]_N23 ;
   wire \O_CORE_DATA[11]_N24 ;
   wire \I_CORE_DATA[11]_N25 ;
   wire \O_CORE_DATA[12]_N26 ;
   wire \I_CORE_DATA[12]_N27 ;
   wire \O_CORE_DATA[13]_N28 ;
   wire \I_CORE_DATA[13]_N29 ;
   wire \O_CORE_DATA[14]_N30 ;
   wire \I_CORE_DATA[14]_N31 ;
   wire \O_CORE_DATA[15]_N32 ;
   wire \I_CORE_DATA[15]_N33 ;
   wire \O_CORE_DATA[16]_N34 ;
   wire \I_CORE_DATA[16]_N35 ;
   wire \O_CORE_DATA[17]_N36 ;
   wire \I_CORE_DATA[17]_N37 ;
   wire \O_CORE_DATA[18]_N38 ;
   wire \I_CORE_DATA[18]_N39 ;
   wire \O_CORE_DATA[19]_N40 ;
   wire \I_CORE_DATA[19]_N41 ;
   wire \O_CORE_DATA[20]_N42 ;
   wire \I_CORE_DATA[20]_N43 ;
   wire \O_CORE_DATA[21]_N44 ;
   wire \I_CORE_DATA[21]_N45 ;
   wire \O_CORE_DATA[22]_N46 ;
   wire \I_CORE_DATA[22]_N47 ;
   wire \O_CORE_DATA[23]_N48 ;
   wire \I_CORE_DATA[23]_N49 ;
   wire \O_CORE_DATA[24]_N50 ;
   wire \I_CORE_DATA[24]_N51 ;
   wire \O_CORE_DATA[25]_N52 ;
   wire \I_CORE_DATA[25]_N53 ;
   wire \O_CORE_DATA[26]_N54 ;
   wire \I_CORE_DATA[26]_N55 ;
   wire \O_CORE_DATA[27]_N56 ;
   wire \I_CORE_DATA[27]_N57 ;
   wire \O_CORE_DATA[28]_N58 ;
   wire \I_CORE_DATA[28]_N59 ;
   wire \O_CORE_DATA[29]_N60 ;
   wire \I_CORE_DATA[29]_N61 ;
   wire \O_CORE_DATA[30]_N62 ;
   wire \I_CORE_DATA[30]_N63 ;
   wire \O_CORE_DATA[31]_N64 ;
   wire \I_CORE_DATA[31]_N65 ;
   wire I_CORE_RESET1_N66;
   wire I_CORE_RESET2_N67;
   wire I_CORE_READY_N68;
   wire I_CORE_SYS_CLK_N69;
   wire DRV_DLX_CHIPTOP_HALT_N70;
   wire \DRV_DLX_CHIPTOP_A[0]_N71 ;
   wire \DRV_DLX_CHIPTOP_A[1]_N72 ;
   wire \DRV_DLX_CHIPTOP_A[2]_N73 ;
   wire \DRV_DLX_CHIPTOP_A[3]_N74 ;
   wire \DRV_DLX_CHIPTOP_A[4]_N75 ;
   wire \DRV_DLX_CHIPTOP_A[5]_N76 ;
   wire \DRV_DLX_CHIPTOP_A[6]_N77 ;
   wire \DRV_DLX_CHIPTOP_A[7]_N78 ;
   wire \DRV_DLX_CHIPTOP_A[8]_N79 ;
   wire \DRV_DLX_CHIPTOP_A[9]_N80 ;
   wire \DRV_DLX_CHIPTOP_A[10]_N81 ;
   wire \DRV_DLX_CHIPTOP_A[11]_N82 ;
   wire \DRV_DLX_CHIPTOP_A[12]_N83 ;
   wire \DRV_DLX_CHIPTOP_A[13]_N84 ;
   wire \DRV_DLX_CHIPTOP_A[14]_N85 ;
   wire \DRV_DLX_CHIPTOP_A[15]_N86 ;
   wire \DRV_DLX_CHIPTOP_A[16]_N87 ;
   wire \DRV_DLX_CHIPTOP_A[17]_N88 ;
   wire \DRV_DLX_CHIPTOP_A[18]_N89 ;
   wire \DRV_DLX_CHIPTOP_A[19]_N90 ;
   wire \DRV_DLX_CHIPTOP_A[20]_N91 ;
   wire \DRV_DLX_CHIPTOP_A[21]_N92 ;
   wire \DRV_DLX_CHIPTOP_A[22]_N93 ;
   wire \DRV_DLX_CHIPTOP_A[23]_N94 ;
   wire \DRV_DLX_CHIPTOP_A[24]_N95 ;
   wire \DRV_DLX_CHIPTOP_A[25]_N96 ;
   wire \DRV_DLX_CHIPTOP_A[26]_N97 ;
   wire \DRV_DLX_CHIPTOP_A[27]_N98 ;
   wire \DRV_DLX_CHIPTOP_A[28]_N99 ;
   wire \DRV_DLX_CHIPTOP_A[29]_N100 ;
   wire \DRV_DLX_CHIPTOP_A[30]_N101 ;
   wire \DRV_DLX_CHIPTOP_A[31]_N102 ;
   wire \DRV_DLX_CHIPTOP_SRAM_ADDR[0]_N103 ;
   wire \DRV_DLX_CHIPTOP_SRAM_ADDR[1]_N104 ;
   wire \DRV_DLX_CHIPTOP_SRAM_ADDR[2]_N105 ;
   wire \DRV_DLX_CHIPTOP_SRAM_ADDR[3]_N106 ;
   wire \DRV_DLX_CHIPTOP_SRAM_ADDR[4]_N107 ;
   wire \DRV_DLX_CHIPTOP_SRAM_ADDR[5]_N108 ;
   wire DRV_DLX_CHIPTOP_SRAM_RDWT_N109;
   wire \DRV_DLX_CHIPTOP_WIDTH[0]_N110 ;
   wire \DRV_DLX_CHIPTOP_WIDTH[1]_N111 ;
   wire DRV_DLX_CHIPTOP_WRITE_ENABLE_N112;
   wire DRV_DLX_CHIPTOP_IFETCH_N113;
   wire DRV_DLX_CHIPTOP_MEM_ENABLE_N114;
   wire NetBScanOut;
   wire ISCAN_NET_1;
   wire ISCAN_NET_2;
   wire ISCAN_NET_3;
   wire ISCAN_NET_4;
   wire ISCAN_NET_5;
   wire ISCAN_NET_6;
   wire ISCAN_NET_7;
   wire ISCAN_NET_8;
   wire ISCAN_NET_9;
   wire ISCAN_NET_10;
   wire ISCAN_NET_11;
   wire ISCAN_NET_12;
   wire ISCAN_NET_13;
   wire ISCAN_NET_14;
   wire ISCAN_NET_15;
   wire ISCAN_NET_16;
   wire ISCAN_NET_17;
   wire ISCAN_NET_18;
   wire ISCAN_NET_19;
   wire ISCAN_NET_20;
   wire ISCAN_NET_21;
   wire ISCAN_NET_22;
   wire ISCAN_NET_23;
   wire ISCAN_NET_24;
   wire ISCAN_NET_25;
   wire ISCAN_NET_26;
   wire ISCAN_NET_27;
   wire ISCAN_NET_28;
   wire ISCAN_NET_29;
   wire ISCAN_NET_30;
   wire ISCAN_NET_31;
   wire ISCAN_NET_32;
   wire ISCAN_NET_33;
   wire ISCAN_NET_34;
   wire ISCAN_NET_35;
   wire ISCAN_NET_36;
   wire ISCAN_NET_37;
   wire ISCAN_NET_38;
   wire ISCAN_NET_39;
   wire ISCAN_NET_40;
   wire ISCAN_NET_41;
   wire ISCAN_NET_42;
   wire ISCAN_NET_43;
   wire ISCAN_NET_44;
   wire ISCAN_NET_45;
   wire ISCAN_NET_46;
   wire ISCAN_NET_47;
   wire ISCAN_NET_48;
   wire ISCAN_NET_49;
   wire ISCAN_NET_50;
   wire ISCAN_NET_51;
   wire ISCAN_NET_52;
   wire ISCAN_NET_53;
   wire ISCAN_NET_54;
   wire ISCAN_NET_55;
   wire ISCAN_NET_56;
   wire ISCAN_NET_57;
   wire ISCAN_NET_58;
   wire ISCAN_NET_59;
   wire ISCAN_NET_60;
   wire ISCAN_NET_61;
   wire ISCAN_NET_62;
   wire ISCAN_NET_63;
   wire ISCAN_NET_64;
   wire ISCAN_NET_65;
   wire ISCAN_NET_66;
   wire ISCAN_NET_67;
   wire ISCAN_NET_68;
   wire ISCAN_NET_69;
   wire ISCAN_NET_70;
   wire ISCAN_NET_71;
   wire ISCAN_NET_72;
   wire ISCAN_NET_73;
   wire ISCAN_NET_74;
   wire ISCAN_NET_75;
   wire ISCAN_NET_76;
   wire ISCAN_NET_77;
   wire ISCAN_NET_78;
   wire ISCAN_NET_79;
   wire ISCAN_NET_80;
   wire ISCAN_NET_81;
   wire ISCAN_NET_82;
   wire TAP_CONTROLLER_ENABLE;
   wire JTAG_SHIFTDR;
   wire JTAG_UPDATEDR;
   wire INSTRUCTION_DECODE_MODE_0;
   wire INSTRUCTION_DECODE_MODE_1;
   wire INSTRUCTION_DECODE_MODE_2;
   wire INSTRUCTION_DECODE_MODE_3;
   wire JTAG_NET_BOUNDARY_CLOCKDR;
   wire JTAG_TDO;
   wire PAD_DLX_CHIPTOP_TDO_EN;

// Module body
   assign VDD = 1'b1;


   DLX_CORE DLX_CORE(
       .I_CORE_DATA({\I_CORE_DATA[31]_N65 , \I_CORE_DATA[30]_N63 , \I_CORE_DATA[29]_N61 , 
       \I_CORE_DATA[28]_N59 , \I_CORE_DATA[27]_N57 , \I_CORE_DATA[26]_N55 , \I_CORE_DATA[25]_N53 , 
       \I_CORE_DATA[24]_N51 , \I_CORE_DATA[23]_N49 , \I_CORE_DATA[22]_N47 , \I_CORE_DATA[21]_N45 , 
       \I_CORE_DATA[20]_N43 , \I_CORE_DATA[19]_N41 , \I_CORE_DATA[18]_N39 , \I_CORE_DATA[17]_N37 , 
       \I_CORE_DATA[16]_N35 , \I_CORE_DATA[15]_N33 , \I_CORE_DATA[14]_N31 , \I_CORE_DATA[13]_N29 , 
       \I_CORE_DATA[12]_N27 , \I_CORE_DATA[11]_N25 , \I_CORE_DATA[10]_N23 , \I_CORE_DATA[9]_N21 , 
       \I_CORE_DATA[8]_N19 , \I_CORE_DATA[7]_N17 , \I_CORE_DATA[6]_N15 , \I_CORE_DATA[5]_N13 , 
       \I_CORE_DATA[4]_N11 , \I_CORE_DATA[3]_N9 , \I_CORE_DATA[2]_N7 , \I_CORE_DATA[1]_N5 , 
       \I_CORE_DATA[0]_N3 }),
       .O_CORE_A(DRV_DLX_CHIPTOP_A[31:0]),
       .O_CORE_DATA(O_CORE_DATA[31:0]),
       .O_CORE_SRAM_ADDR(DRV_DLX_CHIPTOP_SRAM_ADDR[5:0]),
       .O_CORE_WIDTH(DRV_DLX_CHIPTOP_WIDTH[1:0]),
       .SCAN_IN(SCAN_IN[15:0]),
       .SCAN_OUT(SCAN_OUT[15:0]),
       .TEST_CLOCK(TEST_CLOCK_N1),
       .I_CORE_RESET1(I_CORE_RESET1_N66),
       .I_CORE_RESET2(I_CORE_RESET2_N67),
       .I_CORE_READY(I_CORE_READY_N68),
       .I_CORE_SYS_CLK(I_CORE_SYS_CLK_N69),
       .TEST_ENABLE(TEST_ENABLE),
       .SCAN_ENABLE(SCAN_ENABLE),
       .O_CORE_BIDIR_ENABLE(O_CORE_BIDIR_ENABLE),
       .O_CORE_HALT(DRV_DLX_CHIPTOP_HALT),
       .O_CORE_SRAM_RDWT(DRV_DLX_CHIPTOP_SRAM_RDWT),
       .O_CORE_WRITE_ENABLE(DRV_DLX_CHIPTOP_WRITE_ENABLE),
       .O_CORE_IFETCH(DRV_DLX_CHIPTOP_IFETCH),
       .O_CORE_MEM_ENABLE(DRV_DLX_CHIPTOP_MEM_ENABLE)
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[0] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[0]_N2 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[0]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[0]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[0]),
       .RDO(I_CORE_DATA[0]),
       .RSI(SCAN_IN[0])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[1] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[1]_N4 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[1]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[1]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[1]),
       .RDO(I_CORE_DATA[1]),
       .RSI(SCAN_IN[1])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[2] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[2]_N6 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[2]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[2]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[2]),
       .RDO(I_CORE_DATA[2]),
       .RSI(SCAN_IN[2])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[3] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[3]_N8 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[3]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[3]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[3]),
       .RDO(I_CORE_DATA[3]),
       .RSI(SCAN_IN[3])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[4] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[4]_N10 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[4]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[4]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[4]),
       .RDO(I_CORE_DATA[4]),
       .RSI(SCAN_IN[4])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[5] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[5]_N12 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[5]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[5]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[5]),
       .RDO(I_CORE_DATA[5]),
       .RSI(SCAN_IN[5])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[6] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[6]_N14 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[6]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[6]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[6]),
       .RDO(I_CORE_DATA[6]),
       .RSI(SCAN_IN[6])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[7] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[7]_N16 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[7]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[7]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[7]),
       .RDO(I_CORE_DATA[7]),
       .RSI(SCAN_IN[7])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[8] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[8]_N18 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[8]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[8]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[8]),
       .RDO(I_CORE_DATA[8]),
       .RSI(SCAN_IN[8])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[9] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[9]_N20 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[9]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[9]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[9]),
       .RDO(I_CORE_DATA[9]),
       .RSI(SCAN_IN[9])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[10] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[10]_N22 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[10]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[10]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[10]),
       .RDO(I_CORE_DATA[10]),
       .RSI(SCAN_IN[10])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[11] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[11]_N24 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[11]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[11]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[11]),
       .RDO(I_CORE_DATA[11]),
       .RSI(SCAN_IN[11])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[12] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[12]_N26 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[12]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[12]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[12]),
       .RDO(I_CORE_DATA[12]),
       .RSI(SCAN_IN[12])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[13] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[13]_N28 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[13]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[13]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[13]),
       .RDO(I_CORE_DATA[13]),
       .RSI(SCAN_IN[13])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[14] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[14]_N30 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[14]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[14]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[14]),
       .RDO(I_CORE_DATA[14]),
       .RSI(SCAN_IN[14])
   );

   SIOM_BIDIR_SI \SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[15] (
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .DDI(\O_CORE_DATA[15]_N32 ),
       .RDI(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[15]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[15]),
       .DDO(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[15]),
       .RDO(I_CORE_DATA[15]),
       .RSI(SCAN_IN[15])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[16] (
       .DDI(\O_CORE_DATA[16]_N34 ),
       .SO(SCAN_OUT[0]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[16]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[16]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[16]),
       .RDO(I_CORE_DATA[16])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[17] (
       .DDI(\O_CORE_DATA[17]_N36 ),
       .SO(SCAN_OUT[1]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[17]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[17]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[17]),
       .RDO(I_CORE_DATA[17])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[18] (
       .DDI(\O_CORE_DATA[18]_N38 ),
       .SO(SCAN_OUT[2]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[18]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[18]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[18]),
       .RDO(I_CORE_DATA[18])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[19] (
       .DDI(\O_CORE_DATA[19]_N40 ),
       .SO(SCAN_OUT[3]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[19]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[19]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[19]),
       .RDO(I_CORE_DATA[19])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[20] (
       .DDI(\O_CORE_DATA[20]_N42 ),
       .SO(SCAN_OUT[4]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[20]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[20]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[20]),
       .RDO(I_CORE_DATA[20])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[21] (
       .DDI(\O_CORE_DATA[21]_N44 ),
       .SO(SCAN_OUT[5]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[21]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[21]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[21]),
       .RDO(I_CORE_DATA[21])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[22] (
       .DDI(\O_CORE_DATA[22]_N46 ),
       .SO(SCAN_OUT[6]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[22]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[22]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[22]),
       .RDO(I_CORE_DATA[22])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[23] (
       .DDI(\O_CORE_DATA[23]_N48 ),
       .SO(SCAN_OUT[7]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[23]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[23]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[23]),
       .RDO(I_CORE_DATA[23])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[24] (
       .DDI(\O_CORE_DATA[24]_N50 ),
       .SO(SCAN_OUT[8]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[24]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[24]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[24]),
       .RDO(I_CORE_DATA[24])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[25] (
       .DDI(\O_CORE_DATA[25]_N52 ),
       .SO(SCAN_OUT[9]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[25]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[25]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[25]),
       .RDO(I_CORE_DATA[25])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[26] (
       .DDI(\O_CORE_DATA[26]_N54 ),
       .SO(SCAN_OUT[10]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[26]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[26]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[26]),
       .RDO(I_CORE_DATA[26])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[27] (
       .DDI(\O_CORE_DATA[27]_N56 ),
       .SO(SCAN_OUT[11]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[27]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[27]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[27]),
       .RDO(I_CORE_DATA[27])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[28] (
       .DDI(\O_CORE_DATA[28]_N58 ),
       .SO(SCAN_OUT[12]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[28]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[28]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[28]),
       .RDO(I_CORE_DATA[28])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[29] (
       .DDI(\O_CORE_DATA[29]_N60 ),
       .SO(SCAN_OUT[13]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[29]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[29]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[29]),
       .RDO(I_CORE_DATA[29])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[30] (
       .DDI(\O_CORE_DATA[30]_N62 ),
       .SO(SCAN_OUT[14]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[30]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[30]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[30]),
       .RDO(I_CORE_DATA[30])
   );

   SIOM_BIDIR_SO \SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[31] (
       .DDI(\O_CORE_DATA[31]_N64 ),
       .SO(SCAN_OUT[15]),
       .SE(SCAN_ENABLE),
       .EDI(TBB_BSC_MERGED_82_IOEN),
       .RDI(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[31]),
       .DDO(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[31]),
       .EDO(),
       .EDON(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[31]),
       .RDO(I_CORE_DATA[31])
   );

   SIOM_INPUT_SI SIOM_INPUT_SI_DLX_CHIPTOP_RESET2(
       .RDI(PAD_DATA_DLX_CHIPTOP_RESET2),
       .RDO(I_CORE_RESET2),
       .RSI()
   );

   PADDI PAD_DLX_CHIPTOP_TEST_ENABLE(
       .PAD(DLX_CHIPTOP_TEST_ENABLE),
       .Y(TEST_ENABLE)
   );

   PADDI PAD_DLX_CHIPTOP_TEST_CLOCK(
       .PAD(DLX_CHIPTOP_TEST_CLOCK),
       .Y(TEST_CLOCK)
   );

   PADDI PAD_DLX_CHIPTOP_TDI(
       .PAD(DLX_CHIPTOP_TDI),
       .Y(PAD_DATA_DLX_CHIPTOP_TDI)
   );

   PADDI PAD_DLX_CHIPTOP_TCK(
       .PAD(DLX_CHIPTOP_TCK),
       .Y(PAD_DATA_DLX_CHIPTOP_TCK)
   );

   PADDI PAD_DLX_CHIPTOP_TMS(
       .PAD(DLX_CHIPTOP_TMS),
       .Y(PAD_DATA_DLX_CHIPTOP_TMS)
   );

   PADDI PAD_DLX_CHIPTOP_TRST(
       .PAD(DLX_CHIPTOP_TRST),
       .Y(PAD_DATA_DLX_CHIPTOP_TRST)
   );

   PADDI PAD_DLX_CHIPTOP_SE(
       .PAD(DLX_CHIPTOP_SE),
       .Y(SCAN_ENABLE)
   );

   PADDI PAD_DLX_CHIPTOP_RESET(
       .PAD(DLX_CHIPTOP_RESET),
       .Y(I_CORE_RESET1)
   );

   PADDI PAD_DLX_CHIPTOP_RESET2(
       .PAD(DLX_CHIPTOP_RESET2),
       .Y(PAD_DATA_DLX_CHIPTOP_RESET2)
   );

   PADDI PAD_DLX_CHIPTOP_READY(
       .PAD(DLX_CHIPTOP_READY),
       .Y(I_CORE_READY)
   );

   PADDI PAD_DLX_CHIPTOP_SYS_CLK(
       .PAD(DLX_CHIPTOP_SYS_CLK),
       .Y(I_CORE_SYS_CLK)
   );

   PADDO PAD_DLX_CHIPTOP_HALT(
       .A(DRV_DLX_CHIPTOP_HALT_N70),
       .PAD(DLX_CHIPTOP_HALT)
   );

   PADDO \PAD_DLX_CHIPTOP_A[0] (
       .A(\DRV_DLX_CHIPTOP_A[0]_N71 ),
       .PAD(DLX_CHIPTOP_A[0])
   );

   PADDO \PAD_DLX_CHIPTOP_A[1] (
       .A(\DRV_DLX_CHIPTOP_A[1]_N72 ),
       .PAD(DLX_CHIPTOP_A[1])
   );

   PADDO \PAD_DLX_CHIPTOP_A[2] (
       .A(\DRV_DLX_CHIPTOP_A[2]_N73 ),
       .PAD(DLX_CHIPTOP_A[2])
   );

   PADDO \PAD_DLX_CHIPTOP_A[3] (
       .A(\DRV_DLX_CHIPTOP_A[3]_N74 ),
       .PAD(DLX_CHIPTOP_A[3])
   );

   PADDO \PAD_DLX_CHIPTOP_A[4] (
       .A(\DRV_DLX_CHIPTOP_A[4]_N75 ),
       .PAD(DLX_CHIPTOP_A[4])
   );

   PADDO \PAD_DLX_CHIPTOP_A[5] (
       .A(\DRV_DLX_CHIPTOP_A[5]_N76 ),
       .PAD(DLX_CHIPTOP_A[5])
   );

   PADDO \PAD_DLX_CHIPTOP_A[6] (
       .A(\DRV_DLX_CHIPTOP_A[6]_N77 ),
       .PAD(DLX_CHIPTOP_A[6])
   );

   PADDO \PAD_DLX_CHIPTOP_A[7] (
       .A(\DRV_DLX_CHIPTOP_A[7]_N78 ),
       .PAD(DLX_CHIPTOP_A[7])
   );

   PADDO \PAD_DLX_CHIPTOP_A[8] (
       .A(\DRV_DLX_CHIPTOP_A[8]_N79 ),
       .PAD(DLX_CHIPTOP_A[8])
   );

   PADDO \PAD_DLX_CHIPTOP_A[9] (
       .A(\DRV_DLX_CHIPTOP_A[9]_N80 ),
       .PAD(DLX_CHIPTOP_A[9])
   );

   PADDO \PAD_DLX_CHIPTOP_A[10] (
       .A(\DRV_DLX_CHIPTOP_A[10]_N81 ),
       .PAD(DLX_CHIPTOP_A[10])
   );

   PADDO \PAD_DLX_CHIPTOP_A[11] (
       .A(\DRV_DLX_CHIPTOP_A[11]_N82 ),
       .PAD(DLX_CHIPTOP_A[11])
   );

   PADDO \PAD_DLX_CHIPTOP_A[12] (
       .A(\DRV_DLX_CHIPTOP_A[12]_N83 ),
       .PAD(DLX_CHIPTOP_A[12])
   );

   PADDO \PAD_DLX_CHIPTOP_A[13] (
       .A(\DRV_DLX_CHIPTOP_A[13]_N84 ),
       .PAD(DLX_CHIPTOP_A[13])
   );

   PADDO \PAD_DLX_CHIPTOP_A[14] (
       .A(\DRV_DLX_CHIPTOP_A[14]_N85 ),
       .PAD(DLX_CHIPTOP_A[14])
   );

   PADDO \PAD_DLX_CHIPTOP_A[15] (
       .A(\DRV_DLX_CHIPTOP_A[15]_N86 ),
       .PAD(DLX_CHIPTOP_A[15])
   );

   PADDO \PAD_DLX_CHIPTOP_A[16] (
       .A(\DRV_DLX_CHIPTOP_A[16]_N87 ),
       .PAD(DLX_CHIPTOP_A[16])
   );

   PADDO \PAD_DLX_CHIPTOP_A[17] (
       .A(\DRV_DLX_CHIPTOP_A[17]_N88 ),
       .PAD(DLX_CHIPTOP_A[17])
   );

   PADDO \PAD_DLX_CHIPTOP_A[18] (
       .A(\DRV_DLX_CHIPTOP_A[18]_N89 ),
       .PAD(DLX_CHIPTOP_A[18])
   );

   PADDO \PAD_DLX_CHIPTOP_A[19] (
       .A(\DRV_DLX_CHIPTOP_A[19]_N90 ),
       .PAD(DLX_CHIPTOP_A[19])
   );

   PADDO \PAD_DLX_CHIPTOP_A[20] (
       .A(\DRV_DLX_CHIPTOP_A[20]_N91 ),
       .PAD(DLX_CHIPTOP_A[20])
   );

   PADDO \PAD_DLX_CHIPTOP_A[21] (
       .A(\DRV_DLX_CHIPTOP_A[21]_N92 ),
       .PAD(DLX_CHIPTOP_A[21])
   );

   PADDO \PAD_DLX_CHIPTOP_A[22] (
       .A(\DRV_DLX_CHIPTOP_A[22]_N93 ),
       .PAD(DLX_CHIPTOP_A[22])
   );

   PADDO \PAD_DLX_CHIPTOP_A[23] (
       .A(\DRV_DLX_CHIPTOP_A[23]_N94 ),
       .PAD(DLX_CHIPTOP_A[23])
   );

   PADDO \PAD_DLX_CHIPTOP_A[24] (
       .A(\DRV_DLX_CHIPTOP_A[24]_N95 ),
       .PAD(DLX_CHIPTOP_A[24])
   );

   PADDO \PAD_DLX_CHIPTOP_A[25] (
       .A(\DRV_DLX_CHIPTOP_A[25]_N96 ),
       .PAD(DLX_CHIPTOP_A[25])
   );

   PADDO \PAD_DLX_CHIPTOP_A[26] (
       .A(\DRV_DLX_CHIPTOP_A[26]_N97 ),
       .PAD(DLX_CHIPTOP_A[26])
   );

   PADDO \PAD_DLX_CHIPTOP_A[27] (
       .A(\DRV_DLX_CHIPTOP_A[27]_N98 ),
       .PAD(DLX_CHIPTOP_A[27])
   );

   PADDO \PAD_DLX_CHIPTOP_A[28] (
       .A(\DRV_DLX_CHIPTOP_A[28]_N99 ),
       .PAD(DLX_CHIPTOP_A[28])
   );

   PADDO \PAD_DLX_CHIPTOP_A[29] (
       .A(\DRV_DLX_CHIPTOP_A[29]_N100 ),
       .PAD(DLX_CHIPTOP_A[29])
   );

   PADDO \PAD_DLX_CHIPTOP_A[30] (
       .A(\DRV_DLX_CHIPTOP_A[30]_N101 ),
       .PAD(DLX_CHIPTOP_A[30])
   );

   PADDO \PAD_DLX_CHIPTOP_A[31] (
       .A(\DRV_DLX_CHIPTOP_A[31]_N102 ),
       .PAD(DLX_CHIPTOP_A[31])
   );

   PADDO \PAD_DLX_CHIPTOP_SRAM_ADDR[0] (
       .A(\DRV_DLX_CHIPTOP_SRAM_ADDR[0]_N103 ),
       .PAD(DLX_CHIPTOP_SRAM_ADDR[0])
   );

   PADDO \PAD_DLX_CHIPTOP_SRAM_ADDR[1] (
       .A(\DRV_DLX_CHIPTOP_SRAM_ADDR[1]_N104 ),
       .PAD(DLX_CHIPTOP_SRAM_ADDR[1])
   );

   PADDO \PAD_DLX_CHIPTOP_SRAM_ADDR[2] (
       .A(\DRV_DLX_CHIPTOP_SRAM_ADDR[2]_N105 ),
       .PAD(DLX_CHIPTOP_SRAM_ADDR[2])
   );

   PADDO \PAD_DLX_CHIPTOP_SRAM_ADDR[3] (
       .A(\DRV_DLX_CHIPTOP_SRAM_ADDR[3]_N106 ),
       .PAD(DLX_CHIPTOP_SRAM_ADDR[3])
   );

   PADDO \PAD_DLX_CHIPTOP_SRAM_ADDR[4] (
       .A(\DRV_DLX_CHIPTOP_SRAM_ADDR[4]_N107 ),
       .PAD(DLX_CHIPTOP_SRAM_ADDR[4])
   );

   PADDO \PAD_DLX_CHIPTOP_SRAM_ADDR[5] (
       .A(\DRV_DLX_CHIPTOP_SRAM_ADDR[5]_N108 ),
       .PAD(DLX_CHIPTOP_SRAM_ADDR[5])
   );

   PADDO PAD_DLX_CHIPTOP_SRAM_RDWT(
       .A(DRV_DLX_CHIPTOP_SRAM_RDWT_N109),
       .PAD(DLX_CHIPTOP_SRAM_RDWT)
   );

   PADDO \PAD_DLX_CHIPTOP_WIDTH[0] (
       .A(\DRV_DLX_CHIPTOP_WIDTH[0]_N110 ),
       .PAD(DLX_CHIPTOP_WIDTH[0])
   );

   PADDO \PAD_DLX_CHIPTOP_WIDTH[1] (
       .A(\DRV_DLX_CHIPTOP_WIDTH[1]_N111 ),
       .PAD(DLX_CHIPTOP_WIDTH[1])
   );

   PADDO PAD_DLX_CHIPTOP_WRITE_ENABLE(
       .A(DRV_DLX_CHIPTOP_WRITE_ENABLE_N112),
       .PAD(DLX_CHIPTOP_WRITE_ENABLE)
   );

   PADDO PAD_DLX_CHIPTOP_IFETCH(
       .A(DRV_DLX_CHIPTOP_IFETCH_N113),
       .PAD(DLX_CHIPTOP_IFETCH)
   );

   PADDO PAD_DLX_CHIPTOP_MEM_ENABLE(
       .A(DRV_DLX_CHIPTOP_MEM_ENABLE_N114),
       .PAD(DLX_CHIPTOP_MEM_ENABLE)
   );

   PADDB PAD_DLX_CHIPTOP_TDO(
       .A(JTAG_TDO),
       .OEN(PAD_DLX_CHIPTOP_TDO_EN),
       .Y(),
       .PAD(DLX_CHIPTOP_TDO)
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[0] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[0]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[0]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[0]),
       .PAD(DLX_CHIPTOP_DATA[0])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[1] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[1]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[1]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[1]),
       .PAD(DLX_CHIPTOP_DATA[1])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[2] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[2]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[2]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[2]),
       .PAD(DLX_CHIPTOP_DATA[2])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[3] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[3]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[3]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[3]),
       .PAD(DLX_CHIPTOP_DATA[3])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[4] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[4]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[4]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[4]),
       .PAD(DLX_CHIPTOP_DATA[4])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[5] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[5]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[5]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[5]),
       .PAD(DLX_CHIPTOP_DATA[5])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[6] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[6]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[6]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[6]),
       .PAD(DLX_CHIPTOP_DATA[6])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[7] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[7]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[7]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[7]),
       .PAD(DLX_CHIPTOP_DATA[7])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[8] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[8]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[8]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[8]),
       .PAD(DLX_CHIPTOP_DATA[8])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[9] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[9]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[9]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[9]),
       .PAD(DLX_CHIPTOP_DATA[9])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[10] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[10]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[10]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[10]),
       .PAD(DLX_CHIPTOP_DATA[10])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[11] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[11]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[11]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[11]),
       .PAD(DLX_CHIPTOP_DATA[11])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[12] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[12]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[12]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[12]),
       .PAD(DLX_CHIPTOP_DATA[12])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[13] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[13]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[13]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[13]),
       .PAD(DLX_CHIPTOP_DATA[13])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[14] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[14]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[14]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[14]),
       .PAD(DLX_CHIPTOP_DATA[14])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[15] (
       .A(DDO_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[15]),
       .OEN(EDON_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[15]),
       .Y(RDI_SIOM_BIDIR_SI_DLX_CHIPTOP_DATA[15]),
       .PAD(DLX_CHIPTOP_DATA[15])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[16] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[16]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[16]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[16]),
       .PAD(DLX_CHIPTOP_DATA[16])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[17] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[17]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[17]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[17]),
       .PAD(DLX_CHIPTOP_DATA[17])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[18] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[18]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[18]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[18]),
       .PAD(DLX_CHIPTOP_DATA[18])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[19] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[19]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[19]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[19]),
       .PAD(DLX_CHIPTOP_DATA[19])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[20] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[20]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[20]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[20]),
       .PAD(DLX_CHIPTOP_DATA[20])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[21] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[21]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[21]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[21]),
       .PAD(DLX_CHIPTOP_DATA[21])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[22] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[22]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[22]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[22]),
       .PAD(DLX_CHIPTOP_DATA[22])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[23] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[23]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[23]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[23]),
       .PAD(DLX_CHIPTOP_DATA[23])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[24] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[24]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[24]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[24]),
       .PAD(DLX_CHIPTOP_DATA[24])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[25] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[25]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[25]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[25]),
       .PAD(DLX_CHIPTOP_DATA[25])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[26] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[26]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[26]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[26]),
       .PAD(DLX_CHIPTOP_DATA[26])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[27] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[27]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[27]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[27]),
       .PAD(DLX_CHIPTOP_DATA[27])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[28] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[28]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[28]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[28]),
       .PAD(DLX_CHIPTOP_DATA[28])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[29] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[29]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[29]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[29]),
       .PAD(DLX_CHIPTOP_DATA[29])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[30] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[30]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[30]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[30]),
       .PAD(DLX_CHIPTOP_DATA[30])
   );

   PADDB \PAD_DLX_CHIPTOP_DATA[31] (
       .A(DDO_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[31]),
       .OEN(EDON_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[31]),
       .Y(RDI_SIOM_BIDIR_SO_DLX_CHIPTOP_DATA[31]),
       .PAD(DLX_CHIPTOP_DATA[31])
   );

   BUFX12 JTAG_TRST_BUFFER(
       .A(PAD_DATA_DLX_CHIPTOP_TRST),
       .Y(JTAG_TRST)
   );

   BUFX12 JTAG_TMS_BUFFER(
       .A(PAD_DATA_DLX_CHIPTOP_TMS),
       .Y(JTAG_TMS)
   );

   BUFX12 JTAG_TCK_BUFFER(
       .A(PAD_DATA_DLX_CHIPTOP_TCK),
       .Y(JTAG_TCK)
   );

   BUFX12 JTAG_TDI_BUFFER(
       .A(PAD_DATA_DLX_CHIPTOP_TDI),
       .Y(JTAG_TDI)
   );

   BC_CLKIN TBB_BSC_DLX_CHIPTOP_TEST_CLOCK_0(
       .RDI(TEST_CLOCK),
       .TDI(ISCAN_NET_82),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .RDO(TEST_CLOCK_N1),
       .TDO(NetBScanOut)
   );

   BC_ENAB_BIDIR TBB_BSC_MERGED_82(
       .EDI(O_CORE_BIDIR_ENABLE),
       .TDI(JTAG_TDI),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE3(INSTRUCTION_DECODE_MODE_3),
       .EDON(TBB_BSC_MERGED_82_IOEN),
       .EDO(),
       .EN(ENABLE),
       .TDO(ISCAN_NET_1)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[0]_1 (
       .DDI(O_CORE_DATA[0]),
       .RDI(I_CORE_DATA[0]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_81),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[0]_N2 ),
       .RDO(\I_CORE_DATA[0]_N3 ),
       .TDO(ISCAN_NET_82)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[1]_2 (
       .DDI(O_CORE_DATA[1]),
       .RDI(I_CORE_DATA[1]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_80),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[1]_N4 ),
       .RDO(\I_CORE_DATA[1]_N5 ),
       .TDO(ISCAN_NET_81)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[2]_3 (
       .DDI(O_CORE_DATA[2]),
       .RDI(I_CORE_DATA[2]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_79),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[2]_N6 ),
       .RDO(\I_CORE_DATA[2]_N7 ),
       .TDO(ISCAN_NET_80)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[3]_4 (
       .DDI(O_CORE_DATA[3]),
       .RDI(I_CORE_DATA[3]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_78),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[3]_N8 ),
       .RDO(\I_CORE_DATA[3]_N9 ),
       .TDO(ISCAN_NET_79)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[4]_5 (
       .DDI(O_CORE_DATA[4]),
       .RDI(I_CORE_DATA[4]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_77),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[4]_N10 ),
       .RDO(\I_CORE_DATA[4]_N11 ),
       .TDO(ISCAN_NET_78)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[5]_6 (
       .DDI(O_CORE_DATA[5]),
       .RDI(I_CORE_DATA[5]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_76),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[5]_N12 ),
       .RDO(\I_CORE_DATA[5]_N13 ),
       .TDO(ISCAN_NET_77)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[6]_7 (
       .DDI(O_CORE_DATA[6]),
       .RDI(I_CORE_DATA[6]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_75),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[6]_N14 ),
       .RDO(\I_CORE_DATA[6]_N15 ),
       .TDO(ISCAN_NET_76)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[7]_8 (
       .DDI(O_CORE_DATA[7]),
       .RDI(I_CORE_DATA[7]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_74),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[7]_N16 ),
       .RDO(\I_CORE_DATA[7]_N17 ),
       .TDO(ISCAN_NET_75)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[8]_9 (
       .DDI(O_CORE_DATA[8]),
       .RDI(I_CORE_DATA[8]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_73),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[8]_N18 ),
       .RDO(\I_CORE_DATA[8]_N19 ),
       .TDO(ISCAN_NET_74)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[9]_10 (
       .DDI(O_CORE_DATA[9]),
       .RDI(I_CORE_DATA[9]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_72),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[9]_N20 ),
       .RDO(\I_CORE_DATA[9]_N21 ),
       .TDO(ISCAN_NET_73)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[10]_11 (
       .DDI(O_CORE_DATA[10]),
       .RDI(I_CORE_DATA[10]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_71),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[10]_N22 ),
       .RDO(\I_CORE_DATA[10]_N23 ),
       .TDO(ISCAN_NET_72)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[11]_12 (
       .DDI(O_CORE_DATA[11]),
       .RDI(I_CORE_DATA[11]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_70),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[11]_N24 ),
       .RDO(\I_CORE_DATA[11]_N25 ),
       .TDO(ISCAN_NET_71)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[12]_13 (
       .DDI(O_CORE_DATA[12]),
       .RDI(I_CORE_DATA[12]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_69),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[12]_N26 ),
       .RDO(\I_CORE_DATA[12]_N27 ),
       .TDO(ISCAN_NET_70)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[13]_14 (
       .DDI(O_CORE_DATA[13]),
       .RDI(I_CORE_DATA[13]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_68),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[13]_N28 ),
       .RDO(\I_CORE_DATA[13]_N29 ),
       .TDO(ISCAN_NET_69)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[14]_15 (
       .DDI(O_CORE_DATA[14]),
       .RDI(I_CORE_DATA[14]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_67),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[14]_N30 ),
       .RDO(\I_CORE_DATA[14]_N31 ),
       .TDO(ISCAN_NET_68)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[15]_16 (
       .DDI(O_CORE_DATA[15]),
       .RDI(I_CORE_DATA[15]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_66),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[15]_N32 ),
       .RDO(\I_CORE_DATA[15]_N33 ),
       .TDO(ISCAN_NET_67)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[16]_17 (
       .DDI(O_CORE_DATA[16]),
       .RDI(I_CORE_DATA[16]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_65),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[16]_N34 ),
       .RDO(\I_CORE_DATA[16]_N35 ),
       .TDO(ISCAN_NET_66)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[17]_18 (
       .DDI(O_CORE_DATA[17]),
       .RDI(I_CORE_DATA[17]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_64),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[17]_N36 ),
       .RDO(\I_CORE_DATA[17]_N37 ),
       .TDO(ISCAN_NET_65)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[18]_19 (
       .DDI(O_CORE_DATA[18]),
       .RDI(I_CORE_DATA[18]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_63),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[18]_N38 ),
       .RDO(\I_CORE_DATA[18]_N39 ),
       .TDO(ISCAN_NET_64)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[19]_20 (
       .DDI(O_CORE_DATA[19]),
       .RDI(I_CORE_DATA[19]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_62),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[19]_N40 ),
       .RDO(\I_CORE_DATA[19]_N41 ),
       .TDO(ISCAN_NET_63)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[20]_21 (
       .DDI(O_CORE_DATA[20]),
       .RDI(I_CORE_DATA[20]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_61),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[20]_N42 ),
       .RDO(\I_CORE_DATA[20]_N43 ),
       .TDO(ISCAN_NET_62)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[21]_22 (
       .DDI(O_CORE_DATA[21]),
       .RDI(I_CORE_DATA[21]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_60),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[21]_N44 ),
       .RDO(\I_CORE_DATA[21]_N45 ),
       .TDO(ISCAN_NET_61)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[22]_23 (
       .DDI(O_CORE_DATA[22]),
       .RDI(I_CORE_DATA[22]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_59),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[22]_N46 ),
       .RDO(\I_CORE_DATA[22]_N47 ),
       .TDO(ISCAN_NET_60)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[23]_24 (
       .DDI(O_CORE_DATA[23]),
       .RDI(I_CORE_DATA[23]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_58),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[23]_N48 ),
       .RDO(\I_CORE_DATA[23]_N49 ),
       .TDO(ISCAN_NET_59)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[24]_25 (
       .DDI(O_CORE_DATA[24]),
       .RDI(I_CORE_DATA[24]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_57),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[24]_N50 ),
       .RDO(\I_CORE_DATA[24]_N51 ),
       .TDO(ISCAN_NET_58)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[25]_26 (
       .DDI(O_CORE_DATA[25]),
       .RDI(I_CORE_DATA[25]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_56),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[25]_N52 ),
       .RDO(\I_CORE_DATA[25]_N53 ),
       .TDO(ISCAN_NET_57)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[26]_27 (
       .DDI(O_CORE_DATA[26]),
       .RDI(I_CORE_DATA[26]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_55),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[26]_N54 ),
       .RDO(\I_CORE_DATA[26]_N55 ),
       .TDO(ISCAN_NET_56)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[27]_28 (
       .DDI(O_CORE_DATA[27]),
       .RDI(I_CORE_DATA[27]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_54),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[27]_N56 ),
       .RDO(\I_CORE_DATA[27]_N57 ),
       .TDO(ISCAN_NET_55)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[28]_29 (
       .DDI(O_CORE_DATA[28]),
       .RDI(I_CORE_DATA[28]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_53),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[28]_N58 ),
       .RDO(\I_CORE_DATA[28]_N59 ),
       .TDO(ISCAN_NET_54)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[29]_30 (
       .DDI(O_CORE_DATA[29]),
       .RDI(I_CORE_DATA[29]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_52),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[29]_N60 ),
       .RDO(\I_CORE_DATA[29]_N61 ),
       .TDO(ISCAN_NET_53)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[30]_31 (
       .DDI(O_CORE_DATA[30]),
       .RDI(I_CORE_DATA[30]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_51),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[30]_N62 ),
       .RDO(\I_CORE_DATA[30]_N63 ),
       .TDO(ISCAN_NET_52)
   );

   BC_BIDIR \TBB_BSC_DLX_CHIPTOP_DATA[31]_32 (
       .DDI(O_CORE_DATA[31]),
       .RDI(I_CORE_DATA[31]),
       .EN(VDD),
       .ENN(ENABLE),
       .TDI(ISCAN_NET_50),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE1(INSTRUCTION_DECODE_MODE_1),
       .MODE2(INSTRUCTION_DECODE_MODE_2),
       .DDO(\O_CORE_DATA[31]_N64 ),
       .RDO(\I_CORE_DATA[31]_N65 ),
       .TDO(ISCAN_NET_51)
   );

   BC_CLKIN TBB_BSC_DLX_CHIPTOP_RESET_33(
       .RDI(I_CORE_RESET1),
       .TDI(ISCAN_NET_49),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .RDO(I_CORE_RESET1_N66),
       .TDO(ISCAN_NET_50)
   );

   BC_IN TBB_BSC_DLX_CHIPTOP_RESET2_34(
       .RDI(I_CORE_RESET2),
       .TDI(ISCAN_NET_48),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_2),
       .RDO(I_CORE_RESET2_N67),
       .TDO(ISCAN_NET_49)
   );

   BC_IN TBB_BSC_DLX_CHIPTOP_READY_35(
       .RDI(I_CORE_READY),
       .TDI(ISCAN_NET_47),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_2),
       .RDO(I_CORE_READY_N68),
       .TDO(ISCAN_NET_48)
   );

   BC_CLKIN TBB_BSC_DLX_CHIPTOP_SYS_CLK_36(
       .RDI(I_CORE_SYS_CLK),
       .TDI(ISCAN_NET_46),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .RDO(I_CORE_SYS_CLK_N69),
       .TDO(ISCAN_NET_47)
   );

   BC_OUT TBB_BSC_DLX_CHIPTOP_HALT_37(
       .DDI(DRV_DLX_CHIPTOP_HALT),
       .TDI(ISCAN_NET_45),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(DRV_DLX_CHIPTOP_HALT_N70),
       .TDO(ISCAN_NET_46)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[0]_38 (
       .DDI(DRV_DLX_CHIPTOP_A[0]),
       .TDI(ISCAN_NET_44),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[0]_N71 ),
       .TDO(ISCAN_NET_45)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[1]_39 (
       .DDI(DRV_DLX_CHIPTOP_A[1]),
       .TDI(ISCAN_NET_43),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[1]_N72 ),
       .TDO(ISCAN_NET_44)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[2]_40 (
       .DDI(DRV_DLX_CHIPTOP_A[2]),
       .TDI(ISCAN_NET_42),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[2]_N73 ),
       .TDO(ISCAN_NET_43)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[3]_41 (
       .DDI(DRV_DLX_CHIPTOP_A[3]),
       .TDI(ISCAN_NET_41),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[3]_N74 ),
       .TDO(ISCAN_NET_42)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[4]_42 (
       .DDI(DRV_DLX_CHIPTOP_A[4]),
       .TDI(ISCAN_NET_40),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[4]_N75 ),
       .TDO(ISCAN_NET_41)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[5]_43 (
       .DDI(DRV_DLX_CHIPTOP_A[5]),
       .TDI(ISCAN_NET_39),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[5]_N76 ),
       .TDO(ISCAN_NET_40)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[6]_44 (
       .DDI(DRV_DLX_CHIPTOP_A[6]),
       .TDI(ISCAN_NET_38),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[6]_N77 ),
       .TDO(ISCAN_NET_39)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[7]_45 (
       .DDI(DRV_DLX_CHIPTOP_A[7]),
       .TDI(ISCAN_NET_37),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[7]_N78 ),
       .TDO(ISCAN_NET_38)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[8]_46 (
       .DDI(DRV_DLX_CHIPTOP_A[8]),
       .TDI(ISCAN_NET_36),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[8]_N79 ),
       .TDO(ISCAN_NET_37)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[9]_47 (
       .DDI(DRV_DLX_CHIPTOP_A[9]),
       .TDI(ISCAN_NET_35),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[9]_N80 ),
       .TDO(ISCAN_NET_36)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[10]_48 (
       .DDI(DRV_DLX_CHIPTOP_A[10]),
       .TDI(ISCAN_NET_34),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[10]_N81 ),
       .TDO(ISCAN_NET_35)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[11]_49 (
       .DDI(DRV_DLX_CHIPTOP_A[11]),
       .TDI(ISCAN_NET_33),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[11]_N82 ),
       .TDO(ISCAN_NET_34)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[12]_50 (
       .DDI(DRV_DLX_CHIPTOP_A[12]),
       .TDI(ISCAN_NET_32),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[12]_N83 ),
       .TDO(ISCAN_NET_33)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[13]_51 (
       .DDI(DRV_DLX_CHIPTOP_A[13]),
       .TDI(ISCAN_NET_31),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[13]_N84 ),
       .TDO(ISCAN_NET_32)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[14]_52 (
       .DDI(DRV_DLX_CHIPTOP_A[14]),
       .TDI(ISCAN_NET_30),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[14]_N85 ),
       .TDO(ISCAN_NET_31)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[15]_53 (
       .DDI(DRV_DLX_CHIPTOP_A[15]),
       .TDI(ISCAN_NET_29),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[15]_N86 ),
       .TDO(ISCAN_NET_30)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[16]_54 (
       .DDI(DRV_DLX_CHIPTOP_A[16]),
       .TDI(ISCAN_NET_28),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[16]_N87 ),
       .TDO(ISCAN_NET_29)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[17]_55 (
       .DDI(DRV_DLX_CHIPTOP_A[17]),
       .TDI(ISCAN_NET_27),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[17]_N88 ),
       .TDO(ISCAN_NET_28)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[18]_56 (
       .DDI(DRV_DLX_CHIPTOP_A[18]),
       .TDI(ISCAN_NET_26),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[18]_N89 ),
       .TDO(ISCAN_NET_27)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[19]_57 (
       .DDI(DRV_DLX_CHIPTOP_A[19]),
       .TDI(ISCAN_NET_25),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[19]_N90 ),
       .TDO(ISCAN_NET_26)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[20]_58 (
       .DDI(DRV_DLX_CHIPTOP_A[20]),
       .TDI(ISCAN_NET_24),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[20]_N91 ),
       .TDO(ISCAN_NET_25)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[21]_59 (
       .DDI(DRV_DLX_CHIPTOP_A[21]),
       .TDI(ISCAN_NET_23),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[21]_N92 ),
       .TDO(ISCAN_NET_24)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[22]_60 (
       .DDI(DRV_DLX_CHIPTOP_A[22]),
       .TDI(ISCAN_NET_22),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[22]_N93 ),
       .TDO(ISCAN_NET_23)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[23]_61 (
       .DDI(DRV_DLX_CHIPTOP_A[23]),
       .TDI(ISCAN_NET_21),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[23]_N94 ),
       .TDO(ISCAN_NET_22)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[24]_62 (
       .DDI(DRV_DLX_CHIPTOP_A[24]),
       .TDI(ISCAN_NET_20),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[24]_N95 ),
       .TDO(ISCAN_NET_21)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[25]_63 (
       .DDI(DRV_DLX_CHIPTOP_A[25]),
       .TDI(ISCAN_NET_19),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[25]_N96 ),
       .TDO(ISCAN_NET_20)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[26]_64 (
       .DDI(DRV_DLX_CHIPTOP_A[26]),
       .TDI(ISCAN_NET_18),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[26]_N97 ),
       .TDO(ISCAN_NET_19)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[27]_65 (
       .DDI(DRV_DLX_CHIPTOP_A[27]),
       .TDI(ISCAN_NET_17),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[27]_N98 ),
       .TDO(ISCAN_NET_18)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[28]_66 (
       .DDI(DRV_DLX_CHIPTOP_A[28]),
       .TDI(ISCAN_NET_16),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[28]_N99 ),
       .TDO(ISCAN_NET_17)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[29]_67 (
       .DDI(DRV_DLX_CHIPTOP_A[29]),
       .TDI(ISCAN_NET_15),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[29]_N100 ),
       .TDO(ISCAN_NET_16)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[30]_68 (
       .DDI(DRV_DLX_CHIPTOP_A[30]),
       .TDI(ISCAN_NET_14),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[30]_N101 ),
       .TDO(ISCAN_NET_15)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_A[31]_69 (
       .DDI(DRV_DLX_CHIPTOP_A[31]),
       .TDI(ISCAN_NET_13),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_A[31]_N102 ),
       .TDO(ISCAN_NET_14)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_SRAM_ADDR[0]_70 (
       .DDI(DRV_DLX_CHIPTOP_SRAM_ADDR[0]),
       .TDI(ISCAN_NET_12),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_SRAM_ADDR[0]_N103 ),
       .TDO(ISCAN_NET_13)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_SRAM_ADDR[1]_71 (
       .DDI(DRV_DLX_CHIPTOP_SRAM_ADDR[1]),
       .TDI(ISCAN_NET_11),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_SRAM_ADDR[1]_N104 ),
       .TDO(ISCAN_NET_12)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_SRAM_ADDR[2]_72 (
       .DDI(DRV_DLX_CHIPTOP_SRAM_ADDR[2]),
       .TDI(ISCAN_NET_10),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_SRAM_ADDR[2]_N105 ),
       .TDO(ISCAN_NET_11)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_SRAM_ADDR[3]_73 (
       .DDI(DRV_DLX_CHIPTOP_SRAM_ADDR[3]),
       .TDI(ISCAN_NET_9),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_SRAM_ADDR[3]_N106 ),
       .TDO(ISCAN_NET_10)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_SRAM_ADDR[4]_74 (
       .DDI(DRV_DLX_CHIPTOP_SRAM_ADDR[4]),
       .TDI(ISCAN_NET_8),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_SRAM_ADDR[4]_N107 ),
       .TDO(ISCAN_NET_9)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_SRAM_ADDR[5]_75 (
       .DDI(DRV_DLX_CHIPTOP_SRAM_ADDR[5]),
       .TDI(ISCAN_NET_7),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_SRAM_ADDR[5]_N108 ),
       .TDO(ISCAN_NET_8)
   );

   BC_OUT TBB_BSC_DLX_CHIPTOP_SRAM_RDWT_76(
       .DDI(DRV_DLX_CHIPTOP_SRAM_RDWT),
       .TDI(ISCAN_NET_6),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(DRV_DLX_CHIPTOP_SRAM_RDWT_N109),
       .TDO(ISCAN_NET_7)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_WIDTH[0]_77 (
       .DDI(DRV_DLX_CHIPTOP_WIDTH[0]),
       .TDI(ISCAN_NET_5),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_WIDTH[0]_N110 ),
       .TDO(ISCAN_NET_6)
   );

   BC_OUT \TBB_BSC_DLX_CHIPTOP_WIDTH[1]_78 (
       .DDI(DRV_DLX_CHIPTOP_WIDTH[1]),
       .TDI(ISCAN_NET_4),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(\DRV_DLX_CHIPTOP_WIDTH[1]_N111 ),
       .TDO(ISCAN_NET_5)
   );

   BC_OUT TBB_BSC_DLX_CHIPTOP_WRITE_ENABLE_79(
       .DDI(DRV_DLX_CHIPTOP_WRITE_ENABLE),
       .TDI(ISCAN_NET_3),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(DRV_DLX_CHIPTOP_WRITE_ENABLE_N112),
       .TDO(ISCAN_NET_4)
   );

   BC_OUT TBB_BSC_DLX_CHIPTOP_IFETCH_80(
       .DDI(DRV_DLX_CHIPTOP_IFETCH),
       .TDI(ISCAN_NET_2),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(DRV_DLX_CHIPTOP_IFETCH_N113),
       .TDO(ISCAN_NET_3)
   );

   BC_OUT TBB_BSC_DLX_CHIPTOP_MEM_ENABLE_81(
       .DDI(DRV_DLX_CHIPTOP_MEM_ENABLE),
       .TDI(ISCAN_NET_1),
       .CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .SHIFTDR(JTAG_SHIFTDR),
       .UPDATEDR(JTAG_UPDATEDR),
       .MODE(INSTRUCTION_DECODE_MODE_0),
       .DDO(DRV_DLX_CHIPTOP_MEM_ENABLE_N114),
       .TDO(ISCAN_NET_2)
   );

   JTAG_MACRO JTAG_MODULE(
       .JTAG_TRST(JTAG_TRST),
       .JTAG_TCK(JTAG_TCK),
       .JTAG_TMS(JTAG_TMS),
       .JTAG_TDI(JTAG_TDI),
       .NetBScanOut(NetBScanOut),
       .TAP_CONTROLLER_ENABLE(TAP_CONTROLLER_ENABLE),
       .JTAG_SHIFTDR(JTAG_SHIFTDR),
       .JTAG_UPDATEDR(JTAG_UPDATEDR),
       .INSTRUCTION_DECODE_MODE_0(INSTRUCTION_DECODE_MODE_0),
       .INSTRUCTION_DECODE_MODE_1(INSTRUCTION_DECODE_MODE_1),
       .INSTRUCTION_DECODE_MODE_2(INSTRUCTION_DECODE_MODE_2),
       .INSTRUCTION_DECODE_MODE_3(INSTRUCTION_DECODE_MODE_3),
       .JTAG_NET_BOUNDARY_CLOCKDR(JTAG_NET_BOUNDARY_CLOCKDR),
       .JTAG_TDO(JTAG_TDO)
   );

   CLKINVX1 BOX_INV_TDO(
       .A(TAP_CONTROLLER_ENABLE),
       .Y(PAD_DLX_CHIPTOP_TDO_EN)
   );

endmodule


//
//   Source File   : /afs/tda.endicott.ibm.com/tbprod/TDA20/linux24/prod/tools.lnx86/dft/9.1/rules/all/SIO/vim/TECH/SIOM_BIDIR_SI
//   Last Modified : Thu Aug  7 16:33:57 2003
//

module SIOM_BIDIR_SI(SE, EDI, DDI, RDI, EDO, EDON, DDO, RDO, RSI);

// Port declarations
   input  SE;
   input  EDI;
   input  DDI;
   input  RDI;
   output EDO;
   output EDON;
   output DDO;
   output RDO;
   output RSI;

// Internal net declarations
   wire NET14;
   wire SE_N0;
   wire EDI_N1;
   wire EDO_N4;
   wire EDON_N5;
   wire DDI_N6;
   wire RDI_N8;

// Module body


   NOR2XL AND_1(
       .A(SE_N0),
       .B(NET14),
       .Y(EDO_N4)
   );

   OR2XL OR_1(
       .A(SE_N0),
       .B(EDI_N1),
       .Y(EDON_N5)
   );

   CLKINVX1 BOX22(
       .A(EDI_N1),
       .Y(NET14)
   );
   assign SE_N0 = SE;
   assign EDI_N1 = EDI;
   assign DDI_N6 = DDI;
   assign RDI_N8 = RDI;
   assign EDO = EDO_N4;
   assign EDON = EDON_N5;
   assign DDO = DDI_N6;
   assign RDO = RDI_N8;
   assign RSI = RDI_N8;

endmodule


//
//   Source File   : /afs/tda.endicott.ibm.com/tbprod/TDA20/linux24/prod/tools.lnx86/dft/9.1/rules/all/SIO/vim/TECH/SIOM_BIDIR_SO
//   Last Modified : Thu Aug  7 16:33:58 2003
//

module SIOM_BIDIR_SO(DDI, SO, SE, EDI, RDI, DDO, EDO, EDON, RDO);

// Port declarations
   input  DDI;
   input  SO;
   input  SE;
   input  EDI;
   input  RDI;
   output DDO;
   output EDO;
   output EDON;
   output RDO;

// Internal net declarations
   wire T0_SIOM_BIDIR_SO;
   wire DDI_N0;
   wire SO_N1;
   wire SE_N2;
   wire EDI_N3;
   wire DDO_N5;
   wire EDO_N6;
   wire EDON_N7;
   wire RDI_N8;
   wire XPNDAO1P0;
   wire XPNDAO1P1;

// Module body


   CLKINVX1 NOT_2(
       .A(SE_N2),
       .Y(T0_SIOM_BIDIR_SO)
   );

   CLKAND2X8 AND_1(
       .A(T0_SIOM_BIDIR_SO),
       .B(EDI_N3),
       .Y(EDON_N7)
   );

   OR2XL BOX19(
       .A(SE_N2),
       .B(EDI_N3),
       .Y(EDO_N6)
   );
   assign DDI_N0 = DDI;
   assign SO_N1 = SO;
   assign SE_N2 = SE;
   assign EDI_N3 = EDI;
   assign RDI_N8 = RDI;
   assign DDO = DDO_N5;
   assign EDO = EDO_N6;
   assign EDON = EDON_N7;
   assign RDO = RDI_N8;

   NAND2XL XPNDAO1S0(
       .A(XPNDAO1P0),
       .B(XPNDAO1P1),
       .Y(DDO_N5)
   );

   NAND2XL XPNDAO1P0_C(
       .A(T0_SIOM_BIDIR_SO),
       .B(DDI_N0),
       .Y(XPNDAO1P0)
   );

   NAND2XL XPNDAO1P1_C(
       .A(SE_N2),
       .B(SO_N1),
       .Y(XPNDAO1P1)
   );

endmodule


//
//   Source File   : /afs/tda.endicott.ibm.com/tbprod/TDA20/linux24/prod/tools.lnx86/dft/9.1/rules/all/SIO/vim/TECH/SIOM_INPUT_SI
//   Last Modified : Thu Aug  7 16:33:55 2003
//

module SIOM_INPUT_SI(RDI, RDO, RSI);

// Port declarations
   input  RDI;
   output RDO;
   output RSI;

// Internal net declarations
   wire RDI_N2;

// Module body

   assign RDI_N2 = RDI;
   assign RDO = RDI_N2;
   assign RSI = RDI_N2;

endmodule


//
//   IDM Proto Box : BC_CLKIN/TECH
//

module BC_CLKIN(RDI, TDI, CLOCKDR, SHIFTDR, RDO, TDO);

// Port declarations
   input  RDI;
   input  TDI;
   input  CLOCKDR;
   input  SHIFTDR;
   output RDO;
   output TDO;

// Internal net declarations
   wire netRDI;
   wire net1;

// Module body
   assign netRDI = RDI;
   assign RDO = netRDI;

   CLKMX2X2 XBOX0(
       .A(netRDI),
       .B(TDI),
       .S0(SHIFTDR),
       .Y(net1)
   );

   DFFHQX1 XBOX1(
       .CK(CLOCKDR),
       .D(net1),
       .Q(TDO)
   );

endmodule


//
//   IDM Proto Box : BC_ENAB_BIDIR/TECH
//

module BC_ENAB_BIDIR(EDI, TDI, CLOCKDR, SHIFTDR, UPDATEDR, MODE1, MODE3, EDON, EDO, 
                     EN, TDO);

// Port declarations
   input  EDI;
   input  TDI;
   input  CLOCKDR;
   input  SHIFTDR;
   input  UPDATEDR;
   input  MODE1;
   input  MODE3;
   output EDON;
   output EDO;
   output EN;
   output TDO;

// Internal net declarations
   wire netTDO;
   wire netEN;
   wire netUpdateOut;
   wire netShiftIn;
   wire netInvMODE3;

// Module body
   assign TDO = netTDO;
   assign EN = netEN;

   CLKMX2X2 XBOX0(
       .A(EDI),
       .B(netUpdateOut),
       .S0(MODE1),
       .Y(netEN)
   );

   DFFHQX1 XBOX1(
       .CK(CLOCKDR),
       .D(netShiftIn),
       .Q(netTDO)
   );

   DFFHQX1 XBOX2(
       .CK(UPDATEDR),
       .D(netTDO),
       .Q(netUpdateOut)
   );

   CLKMX2X2 XBOX3(
       .A(netEN),
       .B(TDI),
       .S0(SHIFTDR),
       .Y(netShiftIn)
   );

   CLKAND2X8 XBOX4(
       .A(MODE3),
       .B(netEN),
       .Y(EDO)
   );

   CLKINVX1 XBOX5(
       .A(MODE3),
       .Y(netInvMODE3)
   );

   OR2XL XBOX6(
       .A(netEN),
       .B(netInvMODE3),
       .Y(EDON)
   );

endmodule


//
//   IDM Proto Box : BC_BIDIR/TECH
//

module BC_BIDIR(DDI, RDI, EN, ENN, TDI, CLOCKDR, SHIFTDR, UPDATEDR, MODE1, MODE2, 
                DDO, RDO, TDO);

// Port declarations
   input  DDI;
   input  RDI;
   input  EN;
   input  ENN;
   input  TDI;
   input  CLOCKDR;
   input  SHIFTDR;
   input  UPDATEDR;
   input  MODE1;
   input  MODE2;
   output DDO;
   output RDO;
   output TDO;

// Internal net declarations
   wire netDDO;
   wire netRDO;
   wire netTDO;
   wire netUpdateOut;
   wire netENNiv;
   wire netInvMODE1;
   wire netENC;
   wire netShiftIn;
   wire netCaptureIn;

// Module body
   assign DDO = netDDO;
   assign RDO = netRDO;
   assign TDO = netTDO;

   CLKMX2X2 XBOX0(
       .A(DDI),
       .B(netUpdateOut),
       .S0(MODE1),
       .Y(netDDO)
   );

   AND3XL XBOX1(
       .A(netENNiv),
       .B(EN),
       .C(netInvMODE1),
       .Y(netENC)
   );

   CLKINVX1 XBOX2(
       .A(MODE1),
       .Y(netInvMODE1)
   );

   CLKINVX1 XBOX3(
       .A(ENN),
       .Y(netENNiv)
   );

   CLKMX2X2 XBOX4(
       .A(netRDO),
       .B(netDDO),
       .S0(netENC),
       .Y(netShiftIn)
   );

   CLKMX2X2 XBOX5(
       .A(netShiftIn),
       .B(TDI),
       .S0(SHIFTDR),
       .Y(netCaptureIn)
   );

   DFFHQX1 XBOX6(
       .CK(CLOCKDR),
       .D(netCaptureIn),
       .Q(netTDO)
   );

   DFFHQX1 XBOX7(
       .CK(UPDATEDR),
       .D(netTDO),
       .Q(netUpdateOut)
   );

   CLKMX2X2 XBOX8(
       .A(RDI),
       .B(netUpdateOut),
       .S0(MODE2),
       .Y(netRDO)
   );

endmodule


//
//   IDM Proto Box : BC_IN/TECH
//

module BC_IN(RDI, TDI, CLOCKDR, SHIFTDR, UPDATEDR, MODE, RDO, TDO);

// Port declarations
   input  RDI;
   input  TDI;
   input  CLOCKDR;
   input  SHIFTDR;
   input  UPDATEDR;
   input  MODE;
   output RDO;
   output TDO;

// Internal net declarations
   wire netTDO;
   wire net2;
   wire net1;

// Module body
   assign TDO = netTDO;

   CLKMX2X2 XBOX0(
       .A(RDI),
       .B(net2),
       .S0(MODE),
       .Y(RDO)
   );

   DFFHQX1 XBOX1(
       .CK(UPDATEDR),
       .D(netTDO),
       .Q(net2)
   );

   DFFHQX1 XBOX2(
       .CK(CLOCKDR),
       .D(net1),
       .Q(netTDO)
   );

   CLKMX2X2 XBOX3(
       .A(RDI),
       .B(TDI),
       .S0(SHIFTDR),
       .Y(net1)
   );

endmodule


//
//   IDM Proto Box : BC_OUT/TECH
//

module BC_OUT(DDI, TDI, CLOCKDR, SHIFTDR, UPDATEDR, MODE, DDO, TDO);

// Port declarations
   input  DDI;
   input  TDI;
   input  CLOCKDR;
   input  SHIFTDR;
   input  UPDATEDR;
   input  MODE;
   output DDO;
   output TDO;

// Internal net declarations
   wire netTDO;
   wire net1;
   wire net2;

// Module body
   assign TDO = netTDO;

   CLKMX2X2 XBOX0(
       .A(DDI),
       .B(TDI),
       .S0(SHIFTDR),
       .Y(net1)
   );

   DFFHQX1 XBOX1(
       .CK(CLOCKDR),
       .D(net1),
       .Q(netTDO)
   );

   DFFHQX1 XBOX2(
       .CK(UPDATEDR),
       .D(netTDO),
       .Q(net2)
   );

   CLKMX2X2 XBOX3(
       .A(DDI),
       .B(net2),
       .S0(MODE),
       .Y(DDO)
   );

endmodule


//
//   IDM Proto Box : JTAG_MACRO/TECH
//

module JTAG_MACRO(JTAG_TRST, JTAG_TCK, JTAG_TMS, JTAG_TDI, NetBScanOut, TAP_CONTROLLER_ENABLE, 
                  JTAG_SHIFTDR, JTAG_UPDATEDR, INSTRUCTION_DECODE_MODE_0, INSTRUCTION_DECODE_MODE_1, 
                  INSTRUCTION_DECODE_MODE_2, INSTRUCTION_DECODE_MODE_3, JTAG_NET_BOUNDARY_CLOCKDR, 
                  JTAG_TDO);

// Port declarations
   input  JTAG_TRST;
   input  JTAG_TCK;
   input  JTAG_TMS;
   input  JTAG_TDI;
   input  NetBScanOut;
   output TAP_CONTROLLER_ENABLE;
   output JTAG_SHIFTDR;
   output JTAG_UPDATEDR;
   output INSTRUCTION_DECODE_MODE_0;
   output INSTRUCTION_DECODE_MODE_1;
   output INSTRUCTION_DECODE_MODE_2;
   output INSTRUCTION_DECODE_MODE_3;
   output JTAG_NET_BOUNDARY_CLOCKDR;
   output JTAG_TDO;

// Internal net declarations
   wire JTAG_TDO_S;
   wire JTAG_RESET;
   wire JTAG_SELECT;
   wire JTAG_SHIFTIR;
   wire JTAG_CLOCKIR;
   wire JTAG_UPDATEIR;
   wire JTAG_SHIFTDR_S;
   wire JTAG_CLOCKDR;
   wire JTAG_INSTRUCT_TDO;
   wire JTAG_DECODE_BIT1;
   wire JTAG_DECODE_BIT0;
   wire JTAG_DECODE_EXTEST;
   wire JTAG_BYPASS_DEFAULT;
   wire JTAG_DECODE_SAMPLE;
   wire JTAG_DECODE_BYPASS;
   wire JTAG_NET_BYPASS_CLOCKDR;
   wire JTAG_BYPASS_TDO;
   wire NetINV_TCK;
   wire NetUnlatchedTDO;
   wire JTAG_MUX_DATA_TDO;
   wire JTAG_BOUNDARY;
   wire NetHighzOrBypass;
   wire XPNDAO2P0;
   wire XPNDAO2P1;
   wire XPNDAO2P2;

// Module body
   assign JTAG_SHIFTDR = JTAG_SHIFTDR_S;

   BUFX12 JTAG_TDO_BUFFER(
       .A(JTAG_TDO_S),
       .Y(JTAG_TDO)
   );

   TAP_CONTROLLER TAP_CONTROLLER(
       .TRST(JTAG_TRST),
       .TCK(JTAG_TCK),
       .TMS(JTAG_TMS),
       .RESET(JTAG_RESET),
       .SEL(JTAG_SELECT),
       .ENABLE(TAP_CONTROLLER_ENABLE),
       .SHIFTIR(JTAG_SHIFTIR),
       .CLOCKIR(JTAG_CLOCKIR),
       .UPDATEIR(JTAG_UPDATEIR),
       .SHIFTDR(JTAG_SHIFTDR_S),
       .CLOCKDR(JTAG_CLOCKDR),
       .UPDATEDR(JTAG_UPDATEDR)
   );

   INSTRUCTION_REGISTER INSTRUCTION_REGISTER(
       .SHIFTIR(JTAG_SHIFTIR),
       .TDI(JTAG_TDI),
       .CLOCKIR(JTAG_CLOCKIR),
       .UPDATEIR(JTAG_UPDATEIR),
       .TRST(JTAG_TRST),
       .RESET(JTAG_RESET),
       .TDO(JTAG_INSTRUCT_TDO),
       .BIT1(JTAG_DECODE_BIT1),
       .BIT0(JTAG_DECODE_BIT0)
   );

   INSTRUCTION_DECODE INSTRUCTION_DECODE(
       .BIT1(JTAG_DECODE_BIT1),
       .BIT0(JTAG_DECODE_BIT0),
       .EXTEST(JTAG_DECODE_EXTEST),
       .JTAG_BYPASS_DEFAULT(JTAG_BYPASS_DEFAULT),
       .SAMPLE(JTAG_DECODE_SAMPLE),
       .BYPASS(JTAG_DECODE_BYPASS),
       .MODE_0(INSTRUCTION_DECODE_MODE_0),
       .MODE_1(INSTRUCTION_DECODE_MODE_1),
       .MODE_2(INSTRUCTION_DECODE_MODE_2),
       .MODE_3(INSTRUCTION_DECODE_MODE_3)
   );

   BYPASS_REGISTER BYPASS_REGISTER(
       .TDI(JTAG_TDI),
       .SHIFTDR(JTAG_SHIFTDR_S),
       .CLOCKDR(JTAG_NET_BYPASS_CLOCKDR),
       .TDO(JTAG_BYPASS_TDO)
   );

   CLKINVX1 BoxInvTCKWire(
       .A(JTAG_TCK),
       .Y(NetINV_TCK)
   );

   DFFHQX1 JTAG_TDO_LATCH(
       .CK(NetINV_TCK),
       .D(NetUnlatchedTDO),
       .Q(JTAG_TDO_S)
   );

   CLKMX2X2 JTAG_MUX_INSTRUCTION(
       .A(JTAG_MUX_DATA_TDO),
       .B(JTAG_INSTRUCT_TDO),
       .S0(JTAG_SELECT),
       .Y(NetUnlatchedTDO)
   );

   OR2XL BoxOrExtestIntestSample(
       .A(JTAG_DECODE_EXTEST),
       .B(JTAG_DECODE_SAMPLE),
       .Y(JTAG_BOUNDARY)
   );

   OR2XL JTAG_GATE_OR_BYPASS_CLOCKDR(
       .A(JTAG_DECODE_BYPASS),
       .B(JTAG_BYPASS_DEFAULT),
       .Y(NetHighzOrBypass)
   );

   CLKAND2X8 JTAG_GATE_AND_BYPASS_CLOCKDR(
       .A(JTAG_CLOCKDR),
       .B(NetHighzOrBypass),
       .Y(JTAG_NET_BYPASS_CLOCKDR)
   );

   CLKAND2X8 BoxAndBoundaryClockdr(
       .A(JTAG_CLOCKDR),
       .B(JTAG_BOUNDARY),
       .Y(JTAG_NET_BOUNDARY_CLOCKDR)
   );

   NAND3XL XPNDAO2S0(
       .A(XPNDAO2P0),
       .B(XPNDAO2P1),
       .C(XPNDAO2P2),
       .Y(JTAG_MUX_DATA_TDO)
   );

   NAND2XL XPNDAO2P0_C(
       .A(JTAG_DECODE_BYPASS),
       .B(JTAG_BYPASS_TDO),
       .Y(XPNDAO2P0)
   );

   NAND2XL XPNDAO2P1_C(
       .A(JTAG_BOUNDARY),
       .B(NetBScanOut),
       .Y(XPNDAO2P1)
   );

   NAND2XL XPNDAO2P2_C(
       .A(JTAG_BYPASS_DEFAULT),
       .B(JTAG_BYPASS_TDO),
       .Y(XPNDAO2P2)
   );

endmodule


//
//   IDM Proto Box : TAP_CONTROLLER/TECH
//

module TAP_CONTROLLER(TRST, TCK, TMS, RESET, SEL, ENABLE, SHIFTIR, CLOCKIR, UPDATEIR, 
                      SHIFTDR, CLOCKDR, UPDATEDR);

// Port declarations
   input  TRST;
   input  TCK;
   input  TMS;
   output RESET;
   output SEL;
   output ENABLE;
   output SHIFTIR;
   output CLOCKIR;
   output UPDATEIR;
   output SHIFTDR;
   output CLOCKDR;
   output UPDATEDR;

// Internal net declarations
   wire TCS_TRST_INV;
   wire TCS_TCK;
   wire TCS_TMS;
   wire TCS_RESET;
   wire TCS_SELECT;
   wire TCS_ENABLE;
   wire TCS_SHIFTIR;
   wire TCS_CLOCKIR;
   wire TCS_UPDATEIR;
   wire TCS_SHIFTDR;
   wire TCS_CLOCKDR;
   wire TCS_UPDATEDR;
   wire TCS_TRST;
   wire TCS_A;
   wire TCS_A_INV;
   wire TCS_NA;
   wire TCS_B;
   wire TCS_B_INV;
   wire TCS_NB;
   wire TCS_C;
   wire TCS_C_INV;
   wire TCS_NC;
   wire TCS_D;
   wire TCS_D_INV;
   wire TCS_ND;
   wire TCS_TCK_INV;
   wire TCS_NAND_RESET;
   wire TCS_NAND_SHIFTIR;
   wire TCS_NAND_SHIFTDR;
   wire TCS_NAND_ENABLE;
   wire CLOCKIRstate;
   wire CLOCKDRstate;
   wire CLOCKDRstateLATCHED;
   wire CLOCKIRstateLATCHED;
   wire TCS_TMS_INV;
   wire TCS_NA_1;
   wire TCS_NA_2;
   wire TCS_NA_3;
   wire TCS_NA_4;
   wire TCS_NB_1;
   wire TCS_NB_2;
   wire TCS_NB_3;
   wire TCS_NB_4;
   wire TCS_NB_5;
   wire TCS_NB_6;
   wire TCS_NC_1;
   wire TCS_NC_2;
   wire TCS_NC_3;
   wire TCS_ND_1;
   wire TCS_ND_2;
   wire TCS_ND_3;
   wire TCS_ND_4;
   wire NET0;
   wire NET1;
   wire NET2;
   wire TCS_TRST_N3;
   wire TCS_TRST_N4;
   wire TCS_TRST_N5;
   wire TCS_TRST_N6;
   wire TCS_TRST_N7;
   wire TCS_TRST_N8;
   wire TCS_TRST_N9;
   wire TCS_TRST_N10;
   wire TCS_TRST_N11;
   wire TCS_TRST_N12;

// Module body

   assign TCS_TRST_INV = TRST;
   assign TCS_TCK = TCK;
   assign TCS_TMS = TMS;
   assign RESET = TCS_RESET;
   assign SEL = TCS_SELECT;
   assign ENABLE = TCS_ENABLE;
   assign SHIFTIR = TCS_SHIFTIR;
   assign CLOCKIR = TCS_CLOCKIR;
   assign UPDATEIR = TCS_UPDATEIR;
   assign SHIFTDR = TCS_SHIFTDR;
   assign CLOCKDR = TCS_CLOCKDR;
   assign UPDATEDR = TCS_UPDATEDR;

   CLKINVX1 TCB_TRST(
       .A(TCS_TRST_INV),
       .Y(TCS_TRST)
   );

   DFFSX1 TCB_LATCH_NA(
       .CK(TCS_TCK),
       .D(TCS_NA),
       .SN(TCS_TRST_N3),
       .Q(TCS_A),
       .QN(TCS_A_INV)
   );

   DFFSX1 TCB_LATCH_NB(
       .CK(TCS_TCK),
       .D(TCS_NB),
       .SN(TCS_TRST_N4),
       .Q(TCS_B),
       .QN(TCS_B_INV)
   );

   DFFSX1 TCB_LATCH_NC(
       .CK(TCS_TCK),
       .D(TCS_NC),
       .SN(TCS_TRST_N5),
       .Q(TCS_C),
       .QN(TCS_C_INV)
   );

   DFFSX1 TCB_LATCH_ND(
       .CK(TCS_TCK),
       .D(TCS_ND),
       .SN(TCS_TRST_N6),
       .Q(TCS_D),
       .QN(TCS_D_INV)
   );

   CLKINVX1 TCB_TCK_INV(
       .A(TCS_TCK),
       .Y(TCS_TCK_INV)
   );

   BUFX12 TCB_SELECT(
       .A(TCS_D),
       .Y(TCS_SELECT)
   );

   NAND4XL TCB_NAND_RESET(
       .A(TCS_D),
       .B(TCS_C),
       .C(TCS_B),
       .D(TCS_A),
       .Y(TCS_NAND_RESET)
   );

   NAND4XL TCB_NAND_SHIFTIR(
       .A(TCS_D),
       .B(TCS_C_INV),
       .C(TCS_B),
       .D(TCS_A_INV),
       .Y(TCS_NAND_SHIFTIR)
   );

   NAND4XL TCB_NAND_SHIFTDR(
       .A(TCS_D_INV),
       .B(TCS_C_INV),
       .C(TCS_B),
       .D(TCS_A_INV),
       .Y(TCS_NAND_SHIFTDR)
   );

   NAND2XL TCB_NAND_ENABLE(
       .A(TCS_NAND_SHIFTDR),
       .B(TCS_NAND_SHIFTIR),
       .Y(TCS_NAND_ENABLE)
   );

   DFFRHQX1 TCB_RESET(
       .CK(TCS_TCK_INV),
       .D(TCS_NAND_RESET),
       .RN(TCS_TRST_N7),
       .Q(TCS_RESET)
   );

   DFFRHQX1 TCB_ENABLE(
       .CK(TCS_TCK_INV),
       .D(TCS_NAND_ENABLE),
       .RN(TCS_TRST_N8),
       .Q(TCS_ENABLE)
   );

   DFFSX1 TCB_SHIFTIR(
       .CK(TCS_TCK_INV),
       .D(TCS_NAND_SHIFTIR),
       .SN(TCS_TRST_N9),
       .Q(),
       .QN(TCS_SHIFTIR)
   );

   DFFSX1 TCB_SHIFTDR(
       .CK(TCS_TCK_INV),
       .D(TCS_NAND_SHIFTDR),
       .SN(TCS_TRST_N10),
       .Q(),
       .QN(TCS_SHIFTDR)
   );

   AND3XL TCB_AND_CLOCKIR(
       .A(TCS_D),
       .B(TCS_B),
       .C(TCS_A_INV),
       .Y(CLOCKIRstate)
   );

   AND3XL TCB_AND_CLOCKDR(
       .A(TCS_D_INV),
       .B(TCS_B),
       .C(TCS_A_INV),
       .Y(CLOCKDRstate)
   );

   DFFRHQX1 TCB_LATCHCLOCKDRSTATE(
       .CK(TCS_TCK_INV),
       .D(CLOCKDRstate),
       .RN(TCS_TRST_N11),
       .Q(CLOCKDRstateLATCHED)
   );

   DFFRHQX1 TCB_LATCHCLOCKIRSTATE(
       .CK(TCS_TCK_INV),
       .D(CLOCKIRstate),
       .RN(TCS_TRST_N12),
       .Q(CLOCKIRstateLATCHED)
   );

   CLKAND2X8 TCB_AND_CLOCKIR_OUT(
       .A(TCS_TCK),
       .B(CLOCKIRstateLATCHED),
       .Y(TCS_CLOCKIR)
   );

   CLKAND2X8 TCB_AND_CLOCKDR_OUT(
       .A(TCS_TCK),
       .B(CLOCKDRstateLATCHED),
       .Y(TCS_CLOCKDR)
   );

   CLKINVX1 TCB_TMS_INV(
       .A(TCS_TMS),
       .Y(TCS_TMS_INV)
   );

   NAND3XL TCB_NA_1(
       .A(TCS_C_INV),
       .B(TCS_A),
       .C(TCS_TMS_INV),
       .Y(TCS_NA_1)
   );

   NAND2XL TCB_NA_2(
       .A(TCS_B_INV),
       .B(TCS_TMS),
       .Y(TCS_NA_2)
   );

   NAND2XL TCB_NA_3(
       .A(TCS_A_INV),
       .B(TCS_TMS),
       .Y(TCS_NA_3)
   );

   NAND3XL TCB_NA_4(
       .A(TCS_D),
       .B(TCS_C),
       .C(TCS_TMS),
       .Y(TCS_NA_4)
   );

   NAND3XL TCB_NB_1(
       .A(TCS_B),
       .B(TCS_A_INV),
       .C(TCS_TMS_INV),
       .Y(TCS_NB_1)
   );

   NAND2XL TCB_NB_2(
       .A(TCS_C_INV),
       .B(TCS_TMS_INV),
       .Y(TCS_NB_2)
   );

   NAND3XL TCB_NB_3(
       .A(TCS_D_INV),
       .B(TCS_B),
       .C(TCS_TMS_INV),
       .Y(TCS_NB_3)
   );

   NAND3XL TCB_NB_4(
       .A(TCS_D_INV),
       .B(TCS_A_INV),
       .C(TCS_TMS_INV),
       .Y(TCS_NB_4)
   );

   NAND3XL TCB_NB_5(
       .A(TCS_C),
       .B(TCS_B_INV),
       .C(TCS_TMS),
       .Y(TCS_NB_5)
   );

   NAND4XL TCB_NB_6(
       .A(TCS_D),
       .B(TCS_C),
       .C(TCS_A),
       .D(TCS_TMS),
       .Y(TCS_NB_6)
   );

   NAND2XL TCB_NC_1(
       .A(TCS_C),
       .B(TCS_B_INV),
       .Y(TCS_NC_1)
   );

   NAND2XL TCB_NC_2(
       .A(TCS_C),
       .B(TCS_A),
       .Y(TCS_NC_2)
   );

   NAND2XL TCB_NC_3(
       .A(TCS_B_INV),
       .B(TCS_TMS),
       .Y(TCS_NC_3)
   );

   NAND2XL TCB_ND_1(
       .A(TCS_D),
       .B(TCS_C_INV),
       .Y(TCS_ND_1)
   );

   NAND2XL TCB_ND_2(
       .A(TCS_D),
       .B(TCS_B),
       .Y(TCS_ND_2)
   );

   NAND3XL TCB_ND_3(
       .A(TCS_C),
       .B(TCS_B_INV),
       .C(TCS_TMS_INV),
       .Y(TCS_ND_3)
   );

   NAND4XL TCB_ND_4(
       .A(TCS_D_INV),
       .B(TCS_C),
       .C(TCS_B_INV),
       .D(TCS_A_INV),
       .Y(TCS_ND_4)
   );

   NAND4XL TCB_NA(
       .A(TCS_NA_1),
       .B(TCS_NA_2),
       .C(TCS_NA_3),
       .D(TCS_NA_4),
       .Y(TCS_NA)
   );

   NAND3XL TCB_NC(
       .A(TCS_NC_1),
       .B(TCS_NC_2),
       .C(TCS_NC_3),
       .Y(TCS_NC)
   );

   NAND4XL TCB_ND(
       .A(TCS_ND_1),
       .B(TCS_ND_2),
       .C(TCS_ND_3),
       .D(TCS_ND_4),
       .Y(TCS_ND)
   );

   CLKAND2X8 MAPPRIM(
       .A(TCS_TCK_INV),
       .B(TCS_D),
       .Y(NET0)
   );

   AND4XL MAPPRIM_N12(
       .A(TCS_C),
       .B(TCS_B_INV),
       .C(TCS_A),
       .D(NET0),
       .Y(TCS_UPDATEIR)
   );

   CLKAND2X8 MAPPRIM_N13(
       .A(TCS_TCK_INV),
       .B(TCS_D_INV),
       .Y(NET1)
   );

   AND4XL MAPPRIM_N14(
       .A(TCS_C),
       .B(TCS_B_INV),
       .C(TCS_A),
       .D(NET1),
       .Y(TCS_UPDATEDR)
   );

   AND3XL MAPPRIM_N15(
       .A(TCS_NB_1),
       .B(TCS_NB_2),
       .C(TCS_NB_3),
       .Y(NET2)
   );

   NAND4XL MAPPRIM_N16(
       .A(TCS_NB_4),
       .B(TCS_NB_5),
       .C(TCS_NB_6),
       .D(NET2),
       .Y(TCS_NB)
   );

   CLKINVX1 BOX17(
       .A(TCS_TRST),
       .Y(TCS_TRST_N3)
   );

   CLKINVX1 BOX18(
       .A(TCS_TRST),
       .Y(TCS_TRST_N4)
   );

   CLKINVX1 BOX19(
       .A(TCS_TRST),
       .Y(TCS_TRST_N5)
   );

   CLKINVX1 BOX20(
       .A(TCS_TRST),
       .Y(TCS_TRST_N6)
   );

   CLKINVX1 BOX21(
       .A(TCS_TRST),
       .Y(TCS_TRST_N7)
   );

   CLKINVX1 BOX22(
       .A(TCS_TRST),
       .Y(TCS_TRST_N8)
   );

   CLKINVX1 BOX23(
       .A(TCS_TRST),
       .Y(TCS_TRST_N9)
   );

   CLKINVX1 BOX24(
       .A(TCS_TRST),
       .Y(TCS_TRST_N10)
   );

   CLKINVX1 BOX25(
       .A(TCS_TRST),
       .Y(TCS_TRST_N11)
   );

   CLKINVX1 BOX26(
       .A(TCS_TRST),
       .Y(TCS_TRST_N12)
   );

endmodule


//
//   IDM Proto Box : INSTRUCTION_REGISTER/TECH
//

module INSTRUCTION_REGISTER(SHIFTIR, TDI, CLOCKIR, UPDATEIR, TRST, RESET, TDO, BIT1, 
                            BIT0);

// Port declarations
   input  SHIFTIR;
   input  TDI;
   input  CLOCKIR;
   input  UPDATEIR;
   input  TRST;
   input  RESET;
   output TDO;
   output BIT1;
   output BIT0;

// Internal net declarations
   wire TRS_SHIFTIR;
   wire TRS_TDI;
   wire TRS_CLOCKIR;
   wire TRS_UPDATEIR;
   wire TRS_TRST;
   wire TRS_RESET;
   wire TRS_TDO;
   wire GND;
   wire VDD;
   wire TRS_GATED_RESET;
   wire TRS_BIT1;
   wire TRS_BIT1_MUX;
   wire TRS_BIT1_LATCH1;
   wire TRS_BIT0;
   wire TRS_BIT0_MUX;
   wire TRS_BIT0_LATCH1;
   wire TRS_GATED_RESET_N0;
   wire TRS_GATED_RESET_N1;

// Module body
   assign GND = 1'b0;
   assign VDD = 1'b1;

   assign TRS_SHIFTIR = SHIFTIR;
   assign TRS_TDI = TDI;
   assign TRS_CLOCKIR = CLOCKIR;
   assign TRS_UPDATEIR = UPDATEIR;
   assign TRS_TRST = TRST;
   assign TRS_RESET = RESET;
   assign TDO = TRS_TDO;

   NAND2XL TRB_GATED_RESET(
       .A(TRS_TRST),
       .B(TRS_RESET),
       .Y(TRS_GATED_RESET)
   );
   assign BIT1 = TRS_BIT1;

   CLKMX2X2 TRB_BIT1_MUX(
       .A(GND),
       .B(TRS_TDI),
       .S0(TRS_SHIFTIR),
       .Y(TRS_BIT1_MUX)
   );

   DFFHQX1 TRB_BIT1_LATCH1(
       .CK(TRS_CLOCKIR),
       .D(TRS_BIT1_MUX),
       .Q(TRS_BIT1_LATCH1)
   );

   DFFSHQX1 TRB_BIT1_LATCH2(
       .CK(TRS_UPDATEIR),
       .D(TRS_BIT1_LATCH1),
       .SN(TRS_GATED_RESET_N0),
       .Q(TRS_BIT1)
   );
   assign BIT0 = TRS_BIT0;

   CLKMX2X2 TRB_BIT0_MUX(
       .A(VDD),
       .B(TRS_BIT1_LATCH1),
       .S0(TRS_SHIFTIR),
       .Y(TRS_BIT0_MUX)
   );

   DFFHQX1 TRB_BIT0_LATCH1(
       .CK(TRS_CLOCKIR),
       .D(TRS_BIT0_MUX),
       .Q(TRS_BIT0_LATCH1)
   );

   DFFSHQX1 TRB_BIT0_LATCH2(
       .CK(TRS_UPDATEIR),
       .D(TRS_BIT0_LATCH1),
       .SN(TRS_GATED_RESET_N1),
       .Q(TRS_BIT0)
   );

   BUFX12 TRB_TDO(
       .A(TRS_BIT0_LATCH1),
       .Y(TRS_TDO)
   );

   CLKINVX1 BOX9(
       .A(TRS_GATED_RESET),
       .Y(TRS_GATED_RESET_N0)
   );

   CLKINVX1 BOX10(
       .A(TRS_GATED_RESET),
       .Y(TRS_GATED_RESET_N1)
   );

endmodule


//
//   IDM Proto Box : INSTRUCTION_DECODE/TECH
//

module INSTRUCTION_DECODE(BIT1, BIT0, EXTEST, JTAG_BYPASS_DEFAULT, SAMPLE, BYPASS, 
                          MODE_0, MODE_1, MODE_2, MODE_3);

// Port declarations
   input  BIT1;
   input  BIT0;
   output EXTEST;
   output JTAG_BYPASS_DEFAULT;
   output SAMPLE;
   output BYPASS;
   output MODE_0;
   output MODE_1;
   output MODE_2;
   output MODE_3;

// Internal net declarations
   wire TDS_EXTEST_SUM;
   wire TDS_EXTEST_00;
   wire JTAG_BYPASS_DEFAULT_S;
   wire TDS_BIT1;
   wire TDS_BIT0;
   wire TDS_SAMPLE_SUM;
   wire TDS_SAMPLE_01;
   wire TDS_BYPASS_SUM;
   wire TDS_BYPASS_10;
   wire TDS_BYPASS_11;
   wire MODE_0_S;
   wire MODE_1_S;
   wire MODE_2_S;
   wire MODE_3_S;
   wire GND;
   wire TDS_BIT1_N0;
   wire TDS_BIT0_N1;
   wire TDS_BIT1_N2;
   wire TDS_BIT0_N3;
   wire TDS_EXTEST_00_N4;
   wire TDS_SAMPLE_01_N5;
   wire TDS_BYPASS_10_N6;
   wire TDS_BYPASS_11_N7;

// Module body
   assign GND = 1'b0;

   assign EXTEST = TDS_EXTEST_SUM;

   BUFX12 TDB_EXTEST_SUM(
       .A(TDS_EXTEST_00),
       .Y(TDS_EXTEST_SUM)
   );

   NOR2XL BoxDFT_DECODES(
       .A(TDS_EXTEST_SUM),
       .B(TDS_SAMPLE_SUM),
       .Y(JTAG_BYPASS_DEFAULT_S)
   );
   assign JTAG_BYPASS_DEFAULT = JTAG_BYPASS_DEFAULT_S;
   assign TDS_BIT1 = BIT1;

   NAND2XL TDB_EXTEST_00(
       .A(TDS_BIT1_N0),
       .B(TDS_BIT0_N1),
       .Y(TDS_EXTEST_00_N4)
   );
   assign TDS_BIT0 = BIT0;
   assign SAMPLE = TDS_SAMPLE_SUM;

   BUFX12 TDB_SAMPLE_SUM(
       .A(TDS_SAMPLE_01),
       .Y(TDS_SAMPLE_SUM)
   );

   NAND2XL TDB_SAMPLE_01(
       .A(TDS_BIT1_N2),
       .B(TDS_BIT0),
       .Y(TDS_SAMPLE_01_N5)
   );
   assign BYPASS = TDS_BYPASS_SUM;

   OR2XL TDB_BYPASS_SUM(
       .A(TDS_BYPASS_10),
       .B(TDS_BYPASS_11),
       .Y(TDS_BYPASS_SUM)
   );

   NAND2XL TDB_BYPASS_10(
       .A(TDS_BIT1),
       .B(TDS_BIT0_N3),
       .Y(TDS_BYPASS_10_N6)
   );

   NAND2XL TDB_BYPASS_11(
       .A(TDS_BIT1),
       .B(TDS_BIT0),
       .Y(TDS_BYPASS_11_N7)
   );
   assign MODE_0 = MODE_0_S;
   assign MODE_1 = MODE_1_S;
   assign MODE_2 = MODE_2_S;
   assign MODE_3 = MODE_3_S;

   BUFX12 BoxMode0(
       .A(TDS_EXTEST_SUM),
       .Y(MODE_0_S)
   );

   BUFX12 BoxMode1(
       .A(TDS_EXTEST_SUM),
       .Y(MODE_1_S)
   );

   BUFX12 BoxMode2(
       .A(GND),
       .Y(MODE_2_S)
   );

   CLKINVX1 BoxMode3(
       .A(GND),
       .Y(MODE_3_S)
   );

   CLKINVX1 BOX10(
       .A(TDS_BIT1),
       .Y(TDS_BIT1_N0)
   );

   CLKINVX1 BOX11(
       .A(TDS_BIT0),
       .Y(TDS_BIT0_N1)
   );

   CLKINVX1 BOX12(
       .A(TDS_BIT1),
       .Y(TDS_BIT1_N2)
   );

   CLKINVX1 BOX13(
       .A(TDS_BIT0),
       .Y(TDS_BIT0_N3)
   );

   CLKINVX1 BOX14(
       .A(TDS_EXTEST_00_N4),
       .Y(TDS_EXTEST_00)
   );

   CLKINVX1 BOX15(
       .A(TDS_SAMPLE_01_N5),
       .Y(TDS_SAMPLE_01)
   );

   CLKINVX1 BOX16(
       .A(TDS_BYPASS_10_N6),
       .Y(TDS_BYPASS_10)
   );

   CLKINVX1 BOX17(
       .A(TDS_BYPASS_11_N7),
       .Y(TDS_BYPASS_11)
   );

endmodule


//
//   IDM Proto Box : BYPASS_REGISTER/TECH
//

module BYPASS_REGISTER(TDI, SHIFTDR, CLOCKDR, TDO);

// Port declarations
   input  TDI;
   input  SHIFTDR;
   input  CLOCKDR;
   output TDO;

// Internal net declarations
   wire TBS_TDI;
   wire TBS_SHIFTDR;
   wire TBS_CLOCKDR;
   wire TBS_TDO;
   wire TBS_AND;

// Module body

   assign TBS_TDI = TDI;
   assign TBS_SHIFTDR = SHIFTDR;
   assign TBS_CLOCKDR = CLOCKDR;
   assign TDO = TBS_TDO;

   DFFHQX1 TBB_TDO(
       .CK(TBS_CLOCKDR),
       .D(TBS_AND),
       .Q(TBS_TDO)
   );

   CLKAND2X8 TBB_AND(
       .A(TBS_TDI),
       .B(TBS_SHIFTDR),
       .Y(TBS_AND)
   );

endmodule
